var ApolloCodegenFrontend=function(e){"use strict";function t(e){return"object"==typeof e&&null!==e}function n(e,t){const n=/\r\n|[\n\r]/g;let r,i=1,s=t+1;for(;(r=n.exec(e.body))&&r.index<t;)i+=1,s=t+1-(r.index+r[0].length);return{line:i,column:s}}function r(e){return i(e.source,n(e.source,e.start))}function i(e,t){const n=e.locationOffset.column-1,r=o(n)+e.body,i=t.line-1,a=e.locationOffset.line-1,c=t.line+a,u=1===t.line?n:0,p=t.column+u,l=`${e.name}:${c}:${p}\n`,d=r.split(/\r\n|[\n\r]/g),f=d[i];if(f.length>120){const e=Math.floor(p/80),t=p%80,n=[];for(let e=0;e<f.length;e+=80)n.push(f.slice(e,e+80));return l+s([[`${c}`,n[0]],...n.slice(1,e+1).map((e=>["",e])),[" ",o(t-1)+"^"],["",n[e+1]]])}return l+s([[""+(c-1),d[i-1]],[`${c}`,f],["",o(p-1)+"^"],[`${c+1}`,d[i+1]]])}function s(e){const t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>{return o(n-(r=e).length)+r+(t?" | "+t:" |");var r})).join("\n")}function o(e){return Array(e+1).join(" ")}class GraphQLError extends Error{constructor(e,r,i,s,o,a,c){super(e);const u=Array.isArray(r)?0!==r.length?r:void 0:r?[r]:void 0;let p=i;!p&&u&&(p=u[0].loc?.source);let l,d=s;!d&&u&&(d=u.reduce(((e,t)=>(t.loc&&e.push(t.loc.start),e)),[])),d&&0===d.length&&(d=void 0),s&&i?l=s.map((e=>n(i,e))):u&&(l=u.reduce(((e,t)=>(t.loc&&e.push(n(t.loc.source,t.loc.start)),e)),[]));let f=c;if(null==f&&null!=a){const e=a.extensions;t(e)&&(f=e)}Object.defineProperties(this,{name:{value:"GraphQLError"},message:{value:e,enumerable:!0,writable:!0},locations:{value:l??void 0,enumerable:null!=l},path:{value:o??void 0,enumerable:null!=o},nodes:{value:u??void 0},source:{value:p??void 0},positions:{value:d??void 0},originalError:{value:a},extensions:{value:f??void 0,enumerable:null!=f}}),a?.stack?Object.defineProperty(this,"stack",{value:a.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,GraphQLError):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}toString(){return function(e){let t=e.message;if(e.nodes)for(const n of e.nodes)n.loc&&(t+="\n\n"+r(n.loc));else if(e.source&&e.locations)for(const n of e.locations)t+="\n\n"+i(e.source,n);return t}(this)}get[Symbol.toStringTag](){return"Object"}}function a(e,t,n){return new GraphQLError(`Syntax Error: ${n}`,void 0,e,[t])}const c=Object.freeze({NAME:"Name",DOCUMENT:"Document",OPERATION_DEFINITION:"OperationDefinition",VARIABLE_DEFINITION:"VariableDefinition",SELECTION_SET:"SelectionSet",FIELD:"Field",ARGUMENT:"Argument",FRAGMENT_SPREAD:"FragmentSpread",INLINE_FRAGMENT:"InlineFragment",FRAGMENT_DEFINITION:"FragmentDefinition",VARIABLE:"Variable",INT:"IntValue",FLOAT:"FloatValue",STRING:"StringValue",BOOLEAN:"BooleanValue",NULL:"NullValue",ENUM:"EnumValue",LIST:"ListValue",OBJECT:"ObjectValue",OBJECT_FIELD:"ObjectField",DIRECTIVE:"Directive",NAMED_TYPE:"NamedType",LIST_TYPE:"ListType",NON_NULL_TYPE:"NonNullType",SCHEMA_DEFINITION:"SchemaDefinition",OPERATION_TYPE_DEFINITION:"OperationTypeDefinition",SCALAR_TYPE_DEFINITION:"ScalarTypeDefinition",OBJECT_TYPE_DEFINITION:"ObjectTypeDefinition",FIELD_DEFINITION:"FieldDefinition",INPUT_VALUE_DEFINITION:"InputValueDefinition",INTERFACE_TYPE_DEFINITION:"InterfaceTypeDefinition",UNION_TYPE_DEFINITION:"UnionTypeDefinition",ENUM_TYPE_DEFINITION:"EnumTypeDefinition",ENUM_VALUE_DEFINITION:"EnumValueDefinition",INPUT_OBJECT_TYPE_DEFINITION:"InputObjectTypeDefinition",DIRECTIVE_DEFINITION:"DirectiveDefinition",SCHEMA_EXTENSION:"SchemaExtension",SCALAR_TYPE_EXTENSION:"ScalarTypeExtension",OBJECT_TYPE_EXTENSION:"ObjectTypeExtension",INTERFACE_TYPE_EXTENSION:"InterfaceTypeExtension",UNION_TYPE_EXTENSION:"UnionTypeExtension",ENUM_TYPE_EXTENSION:"EnumTypeExtension",INPUT_OBJECT_TYPE_EXTENSION:"InputObjectTypeExtension"});class Location{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}toJSON(){return{start:this.start,end:this.end}}[Symbol.for("nodejs.util.inspect.custom")](){return this.toJSON()}}class Token{constructor(e,t,n,r,i,s,o){this.kind=e,this.start=t,this.end=n,this.line=r,this.column=i,this.value=o,this.prev=s,this.next=null}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}[Symbol.for("nodejs.util.inspect.custom")](){return this.toJSON()}}function u(e){return null!=e&&"string"==typeof e.kind}const p=Object.freeze({SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"});function l(e){return d(e,[])}function d(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return null===e?"null":function(e,t){if(-1!==t.indexOf(e))return"[Circular]";const n=[...t,e];if("function"==typeof e.toJSON){const t=e.toJSON(e);if(t!==e)return"string"==typeof t?t:d(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";const n=Math.min(10,e.length),r=e.length-n,i=[];for(let r=0;r<n;++r)i.push(d(e[r],t));1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`);return"["+i.join(", ")+"]"}(e,n);return function(e,t){const n=Object.keys(e);if(0===n.length)return"{}";if(t.length>2)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";return"{ "+n.map((n=>n+": "+d(e[n],t))).join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}function f(e,t){if(!Boolean(e))throw new Error(t)}var h=function(e,t){return e instanceof t};class Source{constructor(e,t="GraphQL request",n={line:1,column:1}){"string"==typeof e||f(0,`Body must be a string. Received: ${l(e)}.`),this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||f(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||f(0,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}const m=Object.freeze({QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION"});function y(e){const t=e.split(/\r\n|[\n\r]/g),n=function(e){let t=!0,n=!0,r=0,i=null;for(let s=0;s<e.length;++s)switch(e.charCodeAt(s)){case 13:10===e.charCodeAt(s+1)&&++s;case 10:t=!1,n=!0,r=0;break;case 9:case 32:++r;break;default:n&&!t&&(null===i||r<i)&&(i=r),n=!1}return i??0}(e);if(0!==n)for(let e=1;e<t.length;e++)t[e]=t[e].slice(n);let r=0;for(;r<t.length&&T(t[r]);)++r;let i=t.length;for(;i>r&&T(t[i-1]);)--i;return t.slice(r,i).join("\n")}function T(e){for(let t=0;t<e.length;++t)if(" "!==e[t]&&"\t"!==e[t])return!1;return!0}class Lexer{constructor(e){const t=new Token(p.SOF,0,0,0,0,null);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==p.EOF)do{e=e.next??(e.next=N(this,e))}while(e.kind===p.COMMENT);return e}}function E(e){return isNaN(e)?p.EOF:e<127?JSON.stringify(String.fromCharCode(e)):`"\\u${("00"+e.toString(16).toUpperCase()).slice(-4)}"`}function N(e,t){const n=e.source,r=n.body,i=r.length;let s=t.end;for(;s<i;){const i=r.charCodeAt(s),o=e.line,c=1+s-e.lineStart;switch(i){case 65279:case 9:case 32:case 44:++s;continue;case 10:++s,++e.line,e.lineStart=s;continue;case 13:10===r.charCodeAt(s+1)?s+=2:++s,++e.line,e.lineStart=s;continue;case 33:return new Token(p.BANG,s,s+1,o,c,t);case 35:return I(n,s,o,c,t);case 36:return new Token(p.DOLLAR,s,s+1,o,c,t);case 38:return new Token(p.AMP,s,s+1,o,c,t);case 40:return new Token(p.PAREN_L,s,s+1,o,c,t);case 41:return new Token(p.PAREN_R,s,s+1,o,c,t);case 46:if(46===r.charCodeAt(s+1)&&46===r.charCodeAt(s+2))return new Token(p.SPREAD,s,s+3,o,c,t);break;case 58:return new Token(p.COLON,s,s+1,o,c,t);case 61:return new Token(p.EQUALS,s,s+1,o,c,t);case 64:return new Token(p.AT,s,s+1,o,c,t);case 91:return new Token(p.BRACKET_L,s,s+1,o,c,t);case 93:return new Token(p.BRACKET_R,s,s+1,o,c,t);case 123:return new Token(p.BRACE_L,s,s+1,o,c,t);case 124:return new Token(p.PIPE,s,s+1,o,c,t);case 125:return new Token(p.BRACE_R,s,s+1,o,c,t);case 34:return 34===r.charCodeAt(s+1)&&34===r.charCodeAt(s+2)?O(n,s,o,c,t,e):b(n,s,o,c,t);case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return g(n,s,i,o,c,t);case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:return L(n,s,o,c,t)}throw a(n,s,v(i))}const o=e.line,c=1+s-e.lineStart;return new Token(p.EOF,i,i,o,c,t)}function v(e){return e<32&&9!==e&&10!==e&&13!==e?`Cannot contain the invalid character ${E(e)}.`:39===e?"Unexpected single quote character ('), did you mean to use a double quote (\")?":`Cannot parse the unexpected character ${E(e)}.`}function I(e,t,n,r,i){const s=e.body;let o,a=t;do{o=s.charCodeAt(++a)}while(!isNaN(o)&&(o>31||9===o));return new Token(p.COMMENT,t,a,n,r,i,s.slice(t+1,a))}function g(e,t,n,r,i,s){const o=e.body;let c=n,u=t,l=!1;if(45===c&&(c=o.charCodeAt(++u)),48===c){if(c=o.charCodeAt(++u),c>=48&&c<=57)throw a(e,u,`Invalid number, unexpected digit after 0: ${E(c)}.`)}else u=_(e,u,c),c=o.charCodeAt(u);if(46===c&&(l=!0,c=o.charCodeAt(++u),u=_(e,u,c),c=o.charCodeAt(u)),69!==c&&101!==c||(l=!0,c=o.charCodeAt(++u),43!==c&&45!==c||(c=o.charCodeAt(++u)),u=_(e,u,c),c=o.charCodeAt(u)),46===c||function(e){return 95===e||e>=65&&e<=90||e>=97&&e<=122}(c))throw a(e,u,`Invalid number, expected digit but got: ${E(c)}.`);return new Token(l?p.FLOAT:p.INT,t,u,r,i,s,o.slice(t,u))}function _(e,t,n){const r=e.body;let i=t,s=n;if(s>=48&&s<=57){do{s=r.charCodeAt(++i)}while(s>=48&&s<=57);return i}throw a(e,i,`Invalid number, expected digit but got: ${E(s)}.`)}function b(e,t,n,r,i){const s=e.body;let o=t+1,c=o,u=0,l="";for(;o<s.length&&!isNaN(u=s.charCodeAt(o))&&10!==u&&13!==u;){if(34===u)return l+=s.slice(c,o),new Token(p.STRING,t,o+1,n,r,i,l);if(u<32&&9!==u)throw a(e,o,`Invalid character within String: ${E(u)}.`);if(++o,92===u){switch(l+=s.slice(c,o-1),u=s.charCodeAt(o),u){case 34:l+='"';break;case 47:l+="/";break;case 92:l+="\\";break;case 98:l+="\b";break;case 102:l+="\f";break;case 110:l+="\n";break;case 114:l+="\r";break;case 116:l+="\t";break;case 117:{const t=(d=s.charCodeAt(o+1),f=s.charCodeAt(o+2),h=s.charCodeAt(o+3),m=s.charCodeAt(o+4),S(d)<<12|S(f)<<8|S(h)<<4|S(m));if(t<0){throw a(e,o,`Invalid character escape sequence: \\u${s.slice(o+1,o+5)}.`)}l+=String.fromCharCode(t),o+=4;break}default:throw a(e,o,`Invalid character escape sequence: \\${String.fromCharCode(u)}.`)}++o,c=o}}var d,f,h,m;throw a(e,o,"Unterminated string.")}function O(e,t,n,r,i,s){const o=e.body;let c=t+3,u=c,l=0,d="";for(;c<o.length&&!isNaN(l=o.charCodeAt(c));){if(34===l&&34===o.charCodeAt(c+1)&&34===o.charCodeAt(c+2))return d+=o.slice(u,c),new Token(p.BLOCK_STRING,t,c+3,n,r,i,y(d));if(l<32&&9!==l&&10!==l&&13!==l)throw a(e,c,`Invalid character within String: ${E(l)}.`);10===l?(++c,++s.line,s.lineStart=c):13===l?(10===o.charCodeAt(c+1)?c+=2:++c,++s.line,s.lineStart=c):92===l&&34===o.charCodeAt(c+1)&&34===o.charCodeAt(c+2)&&34===o.charCodeAt(c+3)?(d+=o.slice(u,c)+'"""',c+=4,u=c):++c}throw a(e,c,"Unterminated string.")}function S(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function L(e,t,n,r,i){const s=e.body,o=s.length;let a=t+1,c=0;for(;a!==o&&!isNaN(c=s.charCodeAt(a))&&(95===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122);)++a;return new Token(p.NAME,t,a,n,r,i,s.slice(t,a))}function A(e,t){return new Parser(e,t).parseDocument()}class Parser{constructor(e,t){const n=function(e){return h(e,Source)}(e)?e:new Source(e);this._lexer=new Lexer(n),this._options=t}parseName(){const e=this.expectToken(p.NAME);return{kind:c.NAME,value:e.value,loc:this.loc(e)}}parseDocument(){const e=this._lexer.token;return{kind:c.DOCUMENT,definitions:this.many(p.SOF,this.parseDefinition,p.EOF),loc:this.loc(e)}}parseDefinition(){if(this.peek(p.NAME))switch(this._lexer.token.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"schema":case"scalar":case"type":case"interface":case"union":case"enum":case"input":case"directive":return this.parseTypeSystemDefinition();case"extend":return this.parseTypeSystemExtension()}else{if(this.peek(p.BRACE_L))return this.parseOperationDefinition();if(this.peekDescription())return this.parseTypeSystemDefinition()}throw this.unexpected()}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(p.BRACE_L))return{kind:c.OPERATION_DEFINITION,operation:"query",name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet(),loc:this.loc(e)};const t=this.parseOperationType();let n;return this.peek(p.NAME)&&(n=this.parseName()),{kind:c.OPERATION_DEFINITION,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}}parseOperationType(){const e=this.expectToken(p.NAME);switch(e.value){case"query":return"query";case"mutation":return"mutation";case"subscription":return"subscription"}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(p.PAREN_L,this.parseVariableDefinition,p.PAREN_R)}parseVariableDefinition(){const e=this._lexer.token;return{kind:c.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(p.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(p.EQUALS)?this.parseValueLiteral(!0):void 0,directives:this.parseDirectives(!0),loc:this.loc(e)}}parseVariable(){const e=this._lexer.token;return this.expectToken(p.DOLLAR),{kind:c.VARIABLE,name:this.parseName(),loc:this.loc(e)}}parseSelectionSet(){const e=this._lexer.token;return{kind:c.SELECTION_SET,selections:this.many(p.BRACE_L,this.parseSelection,p.BRACE_R),loc:this.loc(e)}}parseSelection(){return this.peek(p.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,r;return this.expectOptionalToken(p.COLON)?(n=t,r=this.parseName()):r=t,{kind:c.FIELD,alias:n,name:r,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(p.BRACE_L)?this.parseSelectionSet():void 0,loc:this.loc(e)}}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(p.PAREN_L,t,p.PAREN_R)}parseArgument(){const e=this._lexer.token,t=this.parseName();return this.expectToken(p.COLON),{kind:c.ARGUMENT,name:t,value:this.parseValueLiteral(!1),loc:this.loc(e)}}parseConstArgument(){const e=this._lexer.token;return{kind:c.ARGUMENT,name:this.parseName(),value:(this.expectToken(p.COLON),this.parseValueLiteral(!0)),loc:this.loc(e)}}parseFragment(){const e=this._lexer.token;this.expectToken(p.SPREAD);const t=this.expectOptionalKeyword("on");return!t&&this.peek(p.NAME)?{kind:c.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1),loc:this.loc(e)}:{kind:c.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}}parseFragmentDefinition(){const e=this._lexer.token;return this.expectKeyword("fragment"),!0===this._options?.experimentalFragmentVariables?{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}:{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case p.BRACKET_L:return this.parseList(e);case p.BRACE_L:return this.parseObject(e);case p.INT:return this._lexer.advance(),{kind:c.INT,value:t.value,loc:this.loc(t)};case p.FLOAT:return this._lexer.advance(),{kind:c.FLOAT,value:t.value,loc:this.loc(t)};case p.STRING:case p.BLOCK_STRING:return this.parseStringLiteral();case p.NAME:switch(this._lexer.advance(),t.value){case"true":return{kind:c.BOOLEAN,value:!0,loc:this.loc(t)};case"false":return{kind:c.BOOLEAN,value:!1,loc:this.loc(t)};case"null":return{kind:c.NULL,loc:this.loc(t)};default:return{kind:c.ENUM,value:t.value,loc:this.loc(t)}}case p.DOLLAR:if(!e)return this.parseVariable()}throw this.unexpected()}parseStringLiteral(){const e=this._lexer.token;return this._lexer.advance(),{kind:c.STRING,value:e.value,block:e.kind===p.BLOCK_STRING,loc:this.loc(e)}}parseList(e){const t=this._lexer.token;return{kind:c.LIST,values:this.any(p.BRACKET_L,(()=>this.parseValueLiteral(e)),p.BRACKET_R),loc:this.loc(t)}}parseObject(e){const t=this._lexer.token;return{kind:c.OBJECT,fields:this.any(p.BRACE_L,(()=>this.parseObjectField(e)),p.BRACE_R),loc:this.loc(t)}}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(p.COLON),{kind:c.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e),loc:this.loc(t)}}parseDirectives(e){const t=[];for(;this.peek(p.AT);)t.push(this.parseDirective(e));return t}parseDirective(e){const t=this._lexer.token;return this.expectToken(p.AT),{kind:c.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e),loc:this.loc(t)}}parseTypeReference(){const e=this._lexer.token;let t;return this.expectOptionalToken(p.BRACKET_L)?(t=this.parseTypeReference(),this.expectToken(p.BRACKET_R),t={kind:c.LIST_TYPE,type:t,loc:this.loc(e)}):t=this.parseNamedType(),this.expectOptionalToken(p.BANG)?{kind:c.NON_NULL_TYPE,type:t,loc:this.loc(e)}:t}parseNamedType(){const e=this._lexer.token;return{kind:c.NAMED_TYPE,name:this.parseName(),loc:this.loc(e)}}parseTypeSystemDefinition(){const e=this.peekDescription()?this._lexer.lookahead():this._lexer.token;if(e.kind===p.NAME)switch(e.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}throw this.unexpected(e)}peekDescription(){return this.peek(p.STRING)||this.peek(p.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseDirectives(!0),r=this.many(p.BRACE_L,this.parseOperationTypeDefinition,p.BRACE_R);return{kind:c.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:r,loc:this.loc(e)}}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(p.COLON);const n=this.parseNamedType();return{kind:c.OPERATION_TYPE_DEFINITION,operation:t,type:n,loc:this.loc(e)}}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),r=this.parseDirectives(!0);return{kind:c.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:r,loc:this.loc(e)}}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),s=this.parseFieldsDefinition();return{kind:c.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:r,directives:i,fields:s,loc:this.loc(e)}}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(p.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(p.BRACE_L,this.parseFieldDefinition,p.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),r=this.parseArgumentDefs();this.expectToken(p.COLON);const i=this.parseTypeReference(),s=this.parseDirectives(!0);return{kind:c.FIELD_DEFINITION,description:t,name:n,arguments:r,type:i,directives:s,loc:this.loc(e)}}parseArgumentDefs(){return this.optionalMany(p.PAREN_L,this.parseInputValueDef,p.PAREN_R)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(p.COLON);const r=this.parseTypeReference();let i;this.expectOptionalToken(p.EQUALS)&&(i=this.parseValueLiteral(!0));const s=this.parseDirectives(!0);return{kind:c.INPUT_VALUE_DEFINITION,description:t,name:n,type:r,defaultValue:i,directives:s,loc:this.loc(e)}}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),s=this.parseFieldsDefinition();return{kind:c.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:r,directives:i,fields:s,loc:this.loc(e)}}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),r=this.parseDirectives(!0),i=this.parseUnionMemberTypes();return{kind:c.UNION_TYPE_DEFINITION,description:t,name:n,directives:r,types:i,loc:this.loc(e)}}parseUnionMemberTypes(){return this.expectOptionalToken(p.EQUALS)?this.delimitedMany(p.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),r=this.parseDirectives(!0),i=this.parseEnumValuesDefinition();return{kind:c.ENUM_TYPE_DEFINITION,description:t,name:n,directives:r,values:i,loc:this.loc(e)}}parseEnumValuesDefinition(){return this.optionalMany(p.BRACE_L,this.parseEnumValueDefinition,p.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),r=this.parseDirectives(!0);return{kind:c.ENUM_VALUE_DEFINITION,description:t,name:n,directives:r,loc:this.loc(e)}}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),r=this.parseDirectives(!0),i=this.parseInputFieldsDefinition();return{kind:c.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:r,fields:i,loc:this.loc(e)}}parseInputFieldsDefinition(){return this.optionalMany(p.BRACE_L,this.parseInputValueDef,p.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===p.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseDirectives(!0),n=this.optionalMany(p.BRACE_L,this.parseOperationTypeDefinition,p.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return{kind:c.SCHEMA_EXTENSION,directives:t,operationTypes:n,loc:this.loc(e)}}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseDirectives(!0);if(0===n.length)throw this.unexpected();return{kind:c.SCALAR_TYPE_EXTENSION,name:t,directives:n,loc:this.loc(e)}}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),i=this.parseFieldsDefinition();if(0===n.length&&0===r.length&&0===i.length)throw this.unexpected();return{kind:c.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:r,fields:i,loc:this.loc(e)}}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),i=this.parseFieldsDefinition();if(0===n.length&&0===r.length&&0===i.length)throw this.unexpected();return{kind:c.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:r,fields:i,loc:this.loc(e)}}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseDirectives(!0),r=this.parseUnionMemberTypes();if(0===n.length&&0===r.length)throw this.unexpected();return{kind:c.UNION_TYPE_EXTENSION,name:t,directives:n,types:r,loc:this.loc(e)}}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseDirectives(!0),r=this.parseEnumValuesDefinition();if(0===n.length&&0===r.length)throw this.unexpected();return{kind:c.ENUM_TYPE_EXTENSION,name:t,directives:n,values:r,loc:this.loc(e)}}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseDirectives(!0),r=this.parseInputFieldsDefinition();if(0===n.length&&0===r.length)throw this.unexpected();return{kind:c.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:r,loc:this.loc(e)}}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(p.AT);const n=this.parseName(),r=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const s=this.parseDirectiveLocations();return{kind:c.DIRECTIVE_DEFINITION,description:t,name:n,arguments:r,repeatable:i,locations:s,loc:this.loc(e)}}parseDirectiveLocations(){return this.delimitedMany(p.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(void 0!==m[t.value])return t;throw this.unexpected(e)}loc(e){if(!0!==this._options?.noLocation)return new Location(e,this._lexer.lastToken,this._lexer.source)}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t;throw a(this._lexer.source,t.start,`Expected ${w(e)}, found ${D(t)}.`)}expectOptionalToken(e){const t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t}expectKeyword(e){const t=this._lexer.token;if(t.kind!==p.NAME||t.value!==e)throw a(this._lexer.source,t.start,`Expected "${e}", found ${D(t)}.`);this._lexer.advance()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===p.NAME&&t.value===e&&(this._lexer.advance(),!0)}unexpected(e){const t=e??this._lexer.token;return a(this._lexer.source,t.start,`Unexpected ${D(t)}.`)}any(e,t,n){this.expectToken(e);const r=[];for(;!this.expectOptionalToken(n);)r.push(t.call(this));return r}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}return[]}many(e,t,n){this.expectToken(e);const r=[];do{r.push(t.call(this))}while(!this.expectOptionalToken(n));return r}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}}function D(e){const t=e.value;return w(e.kind)+(null!=t?` "${t}"`:"")}function w(e){return function(e){return e===p.BANG||e===p.DOLLAR||e===p.AMP||e===p.PAREN_L||e===p.PAREN_R||e===p.SPREAD||e===p.COLON||e===p.EQUALS||e===p.AT||e===p.BRACKET_L||e===p.BRACKET_R||e===p.BRACE_L||e===p.PIPE||e===p.BRACE_R}(e)?`"${e}"`:e}const k={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},x=Object.freeze({});function F(e,t,n=k){let r,i,s,o,a=Array.isArray(e),c=[e],p=-1,d=[];const f=[],h=[];let m=e;do{p++;const e=p===c.length,y=e&&0!==d.length;if(e){if(s=0===h.length?void 0:f[f.length-1],i=o,o=h.pop(),y){if(a)i=i.slice();else{const e={};for(const t of Object.keys(i))e[t]=i[t];i=e}let e=0;for(let t=0;t<d.length;t++){let n=d[t][0];const r=d[t][1];a&&(n-=e),a&&null===r?(i.splice(n,1),e++):i[n]=r}}p=r.index,c=r.keys,d=r.edits,a=r.inArray,r=r.prev}else{if(s=o?a?p:c[p]:void 0,i=o?o[s]:m,null==i)continue;o&&f.push(s)}let T;if(!Array.isArray(i)){if(!u(i))throw new Error(`Invalid AST Node: ${l(i)}.`);const n=G(t,i.kind,e);if(n){if(T=n.call(t,i,s,o,f,h),T===x)break;if(!1===T){if(!e){f.pop();continue}}else if(void 0!==T&&(d.push([s,T]),!e)){if(!u(T)){f.pop();continue}i=T}}}void 0===T&&y&&d.push([s,i]),e?f.pop():(r={inArray:a,index:p,keys:c,edits:d,prev:r},a=Array.isArray(i),c=a?i:n[i.kind]??[],p=-1,d=[],o&&h.push(o),o=i)}while(void 0!==r);return 0!==d.length&&(m=d[d.length-1][1]),m}function R(e){const t=new Array(e.length);return{enter(n){for(let r=0;r<e.length;r++)if(null==t[r]){const i=G(e[r],n.kind,!1);if(i){const s=i.apply(e[r],arguments);if(!1===s)t[r]=n;else if(s===x)t[r]=x;else if(void 0!==s)return s}}},leave(n){for(let r=0;r<e.length;r++)if(null==t[r]){const i=G(e[r],n.kind,!0);if(i){const n=i.apply(e[r],arguments);if(n===x)t[r]=x;else if(void 0!==n&&!1!==n)return n}}else t[r]===n&&(t[r]=null)}}}function G(e,t,n){const r=e[t];if(r){if(!n&&"function"==typeof r)return r;const e=n?r.leave:r.enter;if("function"==typeof e)return e}else{const r=n?e.leave:e.enter;if(r){if("function"==typeof r)return r;const e=r[t];if("function"==typeof e)return e}}}const C=Object.values||(e=>Object.keys(e).map((t=>e[t])));const $=/^[_a-zA-Z][_a-zA-Z0-9]*$/;const Q=Object.entries||(e=>Object.keys(e).map((t=>[t,e[t]])));function U(e,t){return e.reduce(((e,n)=>(e[t(n)]=n,e)),Object.create(null))}function V(e,t){const n=Object.create(null);for(const[r,i]of Q(e))n[r]=t(i,r);return n}function j(e){if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,r]of Q(e))t[n]=r;return t}function M(e,t,n){return e.reduce(((e,r)=>(e[t(r)]=n(r),e)),Object.create(null))}function P(e,t){const[n,r]="string"==typeof e?[e,t]:[void 0,e];let i=" Did you mean ";n&&(i+=n+" ");const s=r.map((e=>`"${e}"`));switch(s.length){case 0:return"";case 1:return i+s[0]+"?";case 2:return i+s[0]+" or "+s[1]+"?"}const o=s.slice(0,5),a=o.pop();return i+o.join(", ")+", or "+a+"?"}function B(e){return e}function Y(e,t){const n=Object.create(null),r=new LexicalDistance(e),i=Math.floor(.4*e.length)+1;for(const e of t){const t=r.measure(e,i);void 0!==t&&(n[e]=t)}return Object.keys(n).sort(((e,t)=>{const r=n[e]-n[t];return 0!==r?r:e.localeCompare(t)}))}class LexicalDistance{constructor(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=J(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e)return 0;const n=e.toLowerCase();if(this._inputLowerCase===n)return 1;let r=J(n),i=this._inputArray;if(r.length<i.length){const e=r;r=i,i=e}const s=r.length,o=i.length;if(s-o>t)return;const a=this._rows;for(let e=0;e<=o;e++)a[0][e]=e;for(let e=1;e<=s;e++){const n=a[(e-1)%3],s=a[e%3];let c=s[0]=e;for(let t=1;t<=o;t++){const o=r[e-1]===i[t-1]?0:1;let u=Math.min(n[t]+1,s[t-1]+1,n[t-1]+o);if(e>1&&t>1&&r[e-1]===i[t-2]&&r[e-2]===i[t-1]){const n=a[(e-2)%3][t-2];u=Math.min(u,n+1)}u<c&&(c=u),s[t]=u}if(c>t)return}const c=a[s%3][o];return c<=t?c:void 0}}function J(e){const t=e.length,n=new Array(t);for(let r=0;r<t;++r)n[r]=e.charCodeAt(r);return n}function q(e){return F(e,{leave:K})}const K={Name:e=>e.value,Variable:e=>"$"+e.name,Document:e=>z(e.definitions,"\n\n")+"\n",OperationDefinition(e){const t=e.operation,n=e.name,r=Z("(",z(e.variableDefinitions,", "),")"),i=z(e.directives," "),s=e.selectionSet;return n||i||r||"query"!==t?z([t,z([n,r]),i,s]," "):s},VariableDefinition:({variable:e,type:t,defaultValue:n,directives:r})=>e+": "+t+Z(" = ",n)+Z(" ",z(r," ")),SelectionSet:({selections:e})=>H(e),Field:({alias:e,name:t,arguments:n,directives:r,selectionSet:i})=>{const s=Z("",e,": ")+t;let o=s+Z("(",z(n,", "),")");return o.length>80&&(o=s+Z("(\n",W(z(n,"\n")),"\n)")),z([o,z(r," "),i]," ")},Argument:({name:e,value:t})=>e+": "+t,FragmentSpread:({name:e,directives:t})=>"..."+e+Z(" ",z(t," ")),InlineFragment:({typeCondition:e,directives:t,selectionSet:n})=>z(["...",Z("on ",e),z(t," "),n]," "),FragmentDefinition:({name:e,typeCondition:t,variableDefinitions:n,directives:r,selectionSet:i})=>`fragment ${e}${Z("(",z(n,", "),")")} on ${t} ${Z("",z(r," ")," ")}`+i,IntValue:({value:e})=>e,FloatValue:({value:e})=>e,StringValue:({value:e,block:t},n)=>t?function(e,t="",n=!1){const r=-1===e.indexOf("\n"),i=" "===e[0]||"\t"===e[0],s='"'===e[e.length-1],o="\\"===e[e.length-1],a=!r||s||o||n;let c="";return!a||r&&i||(c+="\n"+t),c+=t?e.replace(/\n/g,"\n"+t):e,a&&(c+="\n"),'"""'+c.replace(/"""/g,'\\"""')+'"""'}(e,"description"===n?"":"  "):JSON.stringify(e),BooleanValue:({value:e})=>e?"true":"false",NullValue:()=>"null",EnumValue:({value:e})=>e,ListValue:({values:e})=>"["+z(e,", ")+"]",ObjectValue:({fields:e})=>"{"+z(e,", ")+"}",ObjectField:({name:e,value:t})=>e+": "+t,Directive:({name:e,arguments:t})=>"@"+e+Z("(",z(t,", "),")"),NamedType:({name:e})=>e,ListType:({type:e})=>"["+e+"]",NonNullType:({type:e})=>e+"!",SchemaDefinition:X((({directives:e,operationTypes:t})=>z(["schema",z(e," "),H(t)]," "))),OperationTypeDefinition:({operation:e,type:t})=>e+": "+t,ScalarTypeDefinition:X((({name:e,directives:t})=>z(["scalar",e,z(t," ")]," "))),ObjectTypeDefinition:X((({name:e,interfaces:t,directives:n,fields:r})=>z(["type",e,Z("implements ",z(t," & ")),z(n," "),H(r)]," "))),FieldDefinition:X((({name:e,arguments:t,type:n,directives:r})=>e+(te(t)?Z("(\n",W(z(t,"\n")),"\n)"):Z("(",z(t,", "),")"))+": "+n+Z(" ",z(r," ")))),InputValueDefinition:X((({name:e,type:t,defaultValue:n,directives:r})=>z([e+": "+t,Z("= ",n),z(r," ")]," "))),InterfaceTypeDefinition:X((({name:e,interfaces:t,directives:n,fields:r})=>z(["interface",e,Z("implements ",z(t," & ")),z(n," "),H(r)]," "))),UnionTypeDefinition:X((({name:e,directives:t,types:n})=>z(["union",e,z(t," "),n&&0!==n.length?"= "+z(n," | "):""]," "))),EnumTypeDefinition:X((({name:e,directives:t,values:n})=>z(["enum",e,z(t," "),H(n)]," "))),EnumValueDefinition:X((({name:e,directives:t})=>z([e,z(t," ")]," "))),InputObjectTypeDefinition:X((({name:e,directives:t,fields:n})=>z(["input",e,z(t," "),H(n)]," "))),DirectiveDefinition:X((({name:e,arguments:t,repeatable:n,locations:r})=>"directive @"+e+(te(t)?Z("(\n",W(z(t,"\n")),"\n)"):Z("(",z(t,", "),")"))+(n?" repeatable":"")+" on "+z(r," | "))),SchemaExtension:({directives:e,operationTypes:t})=>z(["extend schema",z(e," "),H(t)]," "),ScalarTypeExtension:({name:e,directives:t})=>z(["extend scalar",e,z(t," ")]," "),ObjectTypeExtension:({name:e,interfaces:t,directives:n,fields:r})=>z(["extend type",e,Z("implements ",z(t," & ")),z(n," "),H(r)]," "),InterfaceTypeExtension:({name:e,interfaces:t,directives:n,fields:r})=>z(["extend interface",e,Z("implements ",z(t," & ")),z(n," "),H(r)]," "),UnionTypeExtension:({name:e,directives:t,types:n})=>z(["extend union",e,z(t," "),n&&0!==n.length?"= "+z(n," | "):""]," "),EnumTypeExtension:({name:e,directives:t,values:n})=>z(["extend enum",e,z(t," "),H(n)]," "),InputObjectTypeExtension:({name:e,directives:t,fields:n})=>z(["extend input",e,z(t," "),H(n)]," ")};function X(e){return t=>z([t.description,e(t)],"\n")}function z(e,t=""){return e?.filter((e=>e)).join(t)??""}function H(e){return Z("{\n",W(z(e,"\n")),"\n}")}function Z(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function W(e){return Z("  ",e.replace(/\n/g,"\n  "))}function ee(e){return-1!==e.indexOf("\n")}function te(e){return null!=e&&e.some(ee)}function ne(e,t){if(!Boolean(e))throw new Error(null!=t?t:"Unexpected invariant triggered.")}function re(e,t){switch(e.kind){case c.NULL:return null;case c.INT:return parseInt(e.value,10);case c.FLOAT:return parseFloat(e.value);case c.STRING:case c.ENUM:case c.BOOLEAN:return e.value;case c.LIST:return e.values.map((e=>re(e,t)));case c.OBJECT:return M(e.fields,(e=>e.name.value),(e=>re(e.value,t)));case c.VARIABLE:return t?.[e.name.value]}ne(0,"Unexpected value node: "+l(e))}function ie(e){return se(e)||oe(e)||ae(e)||ce(e)||ue(e)||pe(e)||le(e)||de(e)}function se(e){return h(e,GraphQLScalarType)}function oe(e){return h(e,GraphQLObjectType)}function ae(e){return h(e,GraphQLInterfaceType)}function ce(e){return h(e,GraphQLUnionType)}function ue(e){return h(e,GraphQLEnumType)}function pe(e){return h(e,GraphQLInputObjectType)}function le(e){return h(e,GraphQLList)}function de(e){return h(e,GraphQLNonNull)}function fe(e){return se(e)||ue(e)||pe(e)||Ee(e)&&fe(e.ofType)}function he(e){return se(e)||oe(e)||ae(e)||ce(e)||ue(e)||Ee(e)&&he(e.ofType)}function me(e){return se(e)||ue(e)}function ye(e){return oe(e)||ae(e)||ce(e)}function Te(e){return ae(e)||ce(e)}class GraphQLList{constructor(e){ie(e)||f(0,`Expected ${l(e)} to be a GraphQL type.`),this.ofType=e}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLList"}}class GraphQLNonNull{constructor(e){Ne(e)||f(0,`Expected ${l(e)} to be a GraphQL nullable type.`),this.ofType=e}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLNonNull"}}function Ee(e){return le(e)||de(e)}function Ne(e){return ie(e)&&!de(e)}function ve(e){if(e)return de(e)?e.ofType:e}function Ie(e){return se(e)||oe(e)||ae(e)||ce(e)||ue(e)||pe(e)}function ge(e){if(e){let t=e;for(;Ee(t);)t=t.ofType;return t}}function _e(e){return"function"==typeof e?e():e}function be(e){return e&&e.length>0?e:void 0}class GraphQLScalarType{constructor(e){const t=e.parseValue??B;this.name=e.name,this.description=e.description,this.specifiedByUrl=e.specifiedByUrl,this.serialize=e.serialize??B,this.parseValue=t,this.parseLiteral=e.parseLiteral??((e,n)=>t(re(e,n))),this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),"string"==typeof e.name||f(0,"Must provide name."),null==e.specifiedByUrl||"string"==typeof e.specifiedByUrl||f(0,`${this.name} must provide "specifiedByUrl" as a string, but got: ${l(e.specifiedByUrl)}.`),null==e.serialize||"function"==typeof e.serialize||f(0,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||f(0,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}toConfig(){return{name:this.name,description:this.description,specifiedByUrl:this.specifiedByUrl,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLScalarType"}}class GraphQLObjectType{constructor(e){this.name=e.name,this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),this._fields=Se.bind(void 0,e),this._interfaces=Oe.bind(void 0,e),"string"==typeof e.name||f(0,"Must provide name."),null==e.isTypeOf||"function"==typeof e.isTypeOf||f(0,`${this.name} must provide "isTypeOf" as a function, but got: ${l(e.isTypeOf)}.`)}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ae(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLObjectType"}}function Oe(e){const t=_e(e.interfaces)??[];return Array.isArray(t)||f(0,`${e.name} interfaces must be an Array or a function which returns an Array.`),t}function Se(e){const t=_e(e.fields);return Le(t)||f(0,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),V(t,((t,n)=>{Le(t)||f(0,`${e.name}.${n} field config must be an object.`),null==t.resolve||"function"==typeof t.resolve||f(0,`${e.name}.${n} field resolver must be a function if provided, but got: ${l(t.resolve)}.`);const r=t.args??{};Le(r)||f(0,`${e.name}.${n} args must be an object with argument names as keys.`);const i=Q(r).map((([e,t])=>({name:e,description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions&&j(t.extensions),astNode:t.astNode})));return{name:n,description:t.description,type:t.type,args:i,resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions&&j(t.extensions),astNode:t.astNode}}))}function Le(e){return t(e)&&!Array.isArray(e)}function Ae(e){return V(e,(e=>({description:e.description,type:e.type,args:De(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function De(e){return M(e,(e=>e.name),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function we(e){return de(e.type)&&void 0===e.defaultValue}class GraphQLInterfaceType{constructor(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),this._fields=Se.bind(void 0,e),this._interfaces=Oe.bind(void 0,e),"string"==typeof e.name||f(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||f(0,`${this.name} must provide "resolveType" as a function, but got: ${l(e.resolveType)}.`)}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ae(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}}class GraphQLUnionType{constructor(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),this._types=ke.bind(void 0,e),"string"==typeof e.name||f(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||f(0,`${this.name} must provide "resolveType" as a function, but got: ${l(e.resolveType)}.`)}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLUnionType"}}function ke(e){const t=_e(e.types);return Array.isArray(t)||f(0,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class GraphQLEnumType{constructor(e){var t,n;this.name=e.name,this.description=e.description,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),this._values=(t=this.name,Le(n=e.values)||f(0,`${t} values must be an object with value names as keys.`),Q(n).map((([e,n])=>(Le(n)||f(0,`${t}.${e} must refer to an object with a "value" key representing an internal value but got: ${l(n)}.`),{name:e,description:n.description,value:void 0!==n.value?n.value:e,deprecationReason:n.deprecationReason,extensions:n.extensions&&j(n.extensions),astNode:n.astNode})))),this._valueLookup=new Map(this._values.map((e=>[e.value,e]))),this._nameLookup=U(this._values,(e=>e.name)),"string"==typeof e.name||f(0,"Must provide name.")}getValues(){return this._values}getValue(e){return this._nameLookup[e]}serialize(e){const t=this._valueLookup.get(e);if(void 0===t)throw new GraphQLError(`Enum "${this.name}" cannot represent value: ${l(e)}`);return t.name}parseValue(e){if("string"!=typeof e){const t=l(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-string value: ${t}.`+xe(this,t))}const t=this.getValue(e);if(null==t)throw new GraphQLError(`Value "${e}" does not exist in "${this.name}" enum.`+xe(this,e));return t.value}parseLiteral(e,t){if(e.kind!==c.ENUM){const t=q(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-enum value: ${t}.`+xe(this,t),e)}const n=this.getValue(e.value);if(null==n){const t=q(e);throw new GraphQLError(`Value "${t}" does not exist in "${this.name}" enum.`+xe(this,t),e)}return n.value}toConfig(){const e=M(this.getValues(),(e=>e.name),(e=>({description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,values:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLEnumType"}}function xe(e,t){return P("the enum value",Y(t,e.getValues().map((e=>e.name))))}class GraphQLInputObjectType{constructor(e){this.name=e.name,this.description=e.description,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=be(e.extensionASTNodes),this._fields=Fe.bind(void 0,e),"string"==typeof e.name||f(0,"Must provide name.")}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){const e=V(this.getFields(),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,fields:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[]}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}}function Fe(e){const t=_e(e.fields);return Le(t)||f(0,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),V(t,((t,n)=>(!("resolve"in t)||f(0,`${e.name}.${n} field has a resolve property, but Input Types cannot define resolvers.`),{name:n,description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions&&j(t.extensions),astNode:t.astNode})))}function Re(e){return de(e.type)&&void 0===e.defaultValue}function Ge(e,t){return e===t||(de(e)&&de(t)||!(!le(e)||!le(t)))&&Ge(e.ofType,t.ofType)}function Ce(e,t,n){return t===n||(de(n)?!!de(t)&&Ce(e,t.ofType,n.ofType):de(t)?Ce(e,t.ofType,n):le(n)?!!le(t)&&Ce(e,t.ofType,n.ofType):!le(t)&&(Te(n)&&(ae(t)||oe(t))&&e.isSubType(n,t)))}function $e(e,t,n){return t===n||(Te(t)?Te(n)?e.getPossibleTypes(t).some((t=>e.isSubType(n,t))):e.isSubType(t,n):!!Te(n)&&e.isSubType(n,t))}const Qe=2147483647,Ue=-2147483648;const Ve=new GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize:function(e){const t=Me(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new GraphQLError(`Int cannot represent non-integer value: ${l(t)}`);if(n>Qe||n<Ue)throw new GraphQLError("Int cannot represent non 32-bit signed integer value: "+l(t));return n},parseValue:function(e){if("number"!=typeof e||!Number.isInteger(e))throw new GraphQLError(`Int cannot represent non-integer value: ${l(e)}`);if(e>Qe||e<Ue)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==c.INT)throw new GraphQLError(`Int cannot represent non-integer value: ${q(e)}`,e);const t=parseInt(e.value,10);if(t>Qe||t<Ue)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e.value}`,e);return t}});const je=new GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize:function(e){const t=Me(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new GraphQLError(`Float cannot represent non numeric value: ${l(t)}`);return n},parseValue:function(e){if("number"!=typeof e||!Number.isFinite(e))throw new GraphQLError(`Float cannot represent non numeric value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==c.FLOAT&&e.kind!==c.INT)throw new GraphQLError(`Float cannot represent non numeric value: ${q(e)}`,e);return parseFloat(e.value)}});function Me(e){if(t(e)){if("function"==typeof e.valueOf){const n=e.valueOf();if(!t(n))return n}if("function"==typeof e.toJSON)return e.toJSON()}return e}const Pe=new GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize:function(e){const t=Me(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new GraphQLError(`String cannot represent value: ${l(e)}`)},parseValue:function(e){if("string"!=typeof e)throw new GraphQLError(`String cannot represent a non string value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==c.STRING)throw new GraphQLError(`String cannot represent a non string value: ${q(e)}`,e);return e.value}});const Be=new GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize:function(e){const t=Me(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new GraphQLError(`Boolean cannot represent a non boolean value: ${l(t)}`)},parseValue:function(e){if("boolean"!=typeof e)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==c.BOOLEAN)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${q(e)}`,e);return e.value}});const Ye=new GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize:function(e){const t=Me(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new GraphQLError(`ID cannot represent value: ${l(e)}`)},parseValue:function(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new GraphQLError(`ID cannot represent value: ${l(e)}`)},parseLiteral(e){if(e.kind!==c.STRING&&e.kind!==c.INT)throw new GraphQLError("ID cannot represent a non-string and non-integer value: "+q(e),e);return e.value}}),Je=Object.freeze([Pe,Ve,je,Be,Ye]);function qe(e){return Je.some((({name:t})=>e.name===t))}function Ke(e,n){if(de(n)){const t=Ke(e,n.ofType);return t?.kind===c.NULL?null:t}if(null===e)return{kind:c.NULL};if(void 0===e)return null;if(le(n)){const t=n.ofType;if(function(e){if(null==e||"object"!=typeof e)return!1;const t=e.length;return"number"==typeof t&&t>=0&&t%1==0||"function"==typeof e[Symbol.iterator]}(e)){const n=[];for(const r of Array.from(e)){const e=Ke(r,t);null!=e&&n.push(e)}return{kind:c.LIST,values:n}}return Ke(e,t)}if(pe(n)){if(!t(e))return null;const r=[];for(const t of C(n.getFields())){const n=Ke(e[t.name],t.type);n&&r.push({kind:c.OBJECT_FIELD,name:{kind:c.NAME,value:t.name},value:n})}return{kind:c.OBJECT,fields:r}}if(me(n)){const t=n.serialize(e);if(null==t)return null;if("boolean"==typeof t)return{kind:c.BOOLEAN,value:t};if("number"==typeof t&&Number.isFinite(t)){const e=String(t);return Xe.test(e)?{kind:c.INT,value:e}:{kind:c.FLOAT,value:e}}if("string"==typeof t)return ue(n)?{kind:c.ENUM,value:t}:n===Ye&&Xe.test(t)?{kind:c.INT,value:t}:{kind:c.STRING,value:t};throw new TypeError(`Cannot convert value to AST: ${l(t)}.`)}ne(0,"Unexpected input type: "+l(n))}const Xe=/^-?(?:0|[1-9][0-9]*)$/,ze=new GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:Pe,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(We))),resolve:e=>C(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new GraphQLNonNull(We),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:We,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:We,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(He))),resolve:e=>e.getDirectives()}})}),He=new GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new GraphQLNonNull(Pe),resolve:e=>e.name},description:{type:Pe,resolve:e=>e.description},isRepeatable:{type:new GraphQLNonNull(Be),resolve:e=>e.isRepeatable},locations:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Ze))),resolve:e=>e.locations},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(tt))),resolve:e=>e.args}})}),Ze=new GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:m.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:m.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:m.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:m.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:m.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:m.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:m.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:m.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:m.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:m.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:m.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:m.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:m.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:m.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:m.UNION,description:"Location adjacent to a union definition."},ENUM:{value:m.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:m.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:m.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:m.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),We=new GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new GraphQLNonNull(it),resolve:e=>se(e)?rt.SCALAR:oe(e)?rt.OBJECT:ae(e)?rt.INTERFACE:ce(e)?rt.UNION:ue(e)?rt.ENUM:pe(e)?rt.INPUT_OBJECT:le(e)?rt.LIST:de(e)?rt.NON_NULL:void ne(0,`Unexpected type: "${l(e)}".`)},name:{type:Pe,resolve:e=>void 0!==e.name?e.name:void 0},description:{type:Pe,resolve:e=>void 0!==e.description?e.description:void 0},specifiedByUrl:{type:Pe,resolve:e=>void 0!==e.specifiedByUrl?e.specifiedByUrl:void 0},fields:{type:new GraphQLList(new GraphQLNonNull(et)),args:{includeDeprecated:{type:Be,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(oe(e)||ae(e)){const n=C(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},interfaces:{type:new GraphQLList(new GraphQLNonNull(We)),resolve(e){if(oe(e)||ae(e))return e.getInterfaces()}},possibleTypes:{type:new GraphQLList(new GraphQLNonNull(We)),resolve(e,t,n,{schema:r}){if(Te(e))return r.getPossibleTypes(e)}},enumValues:{type:new GraphQLList(new GraphQLNonNull(nt)),args:{includeDeprecated:{type:Be,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(ue(e)){const n=e.getValues();return t?n:n.filter((e=>null==e.deprecationReason))}}},inputFields:{type:new GraphQLList(new GraphQLNonNull(tt)),args:{includeDeprecated:{type:Be,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(pe(e)){const n=C(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},ofType:{type:We,resolve:e=>void 0!==e.ofType?e.ofType:void 0}})}),et=new GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new GraphQLNonNull(Pe),resolve:e=>e.name},description:{type:Pe,resolve:e=>e.description},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(tt))),args:{includeDeprecated:{type:Be,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter((e=>null==e.deprecationReason))},type:{type:new GraphQLNonNull(We),resolve:e=>e.type},isDeprecated:{type:new GraphQLNonNull(Be),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Pe,resolve:e=>e.deprecationReason}})}),tt=new GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new GraphQLNonNull(Pe),resolve:e=>e.name},description:{type:Pe,resolve:e=>e.description},type:{type:new GraphQLNonNull(We),resolve:e=>e.type},defaultValue:{type:Pe,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,r=Ke(n,t);return r?q(r):null}},isDeprecated:{type:new GraphQLNonNull(Be),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Pe,resolve:e=>e.deprecationReason}})}),nt=new GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new GraphQLNonNull(Pe),resolve:e=>e.name},description:{type:Pe,resolve:e=>e.description},isDeprecated:{type:new GraphQLNonNull(Be),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Pe,resolve:e=>e.deprecationReason}})}),rt=Object.freeze({SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"}),it=new GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:rt.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:rt.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:rt.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:rt.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:rt.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:rt.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:rt.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:rt.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),st={name:"__schema",type:new GraphQLNonNull(ze),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:r})=>r,deprecationReason:void 0,extensions:void 0,astNode:void 0},ot={name:"__type",type:We,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new GraphQLNonNull(Pe),defaultValue:void 0,deprecationReason:void 0,extensions:void 0,astNode:void 0}],resolve:(e,{name:t},n,{schema:r})=>r.getType(t),deprecationReason:void 0,extensions:void 0,astNode:void 0},at={name:"__typename",type:new GraphQLNonNull(Pe),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:r})=>r.name,deprecationReason:void 0,extensions:void 0,astNode:void 0},ct=Object.freeze([ze,He,Ze,We,et,tt,nt,it]);function ut(e){return ct.some((({name:t})=>e.name===t))}function pt(e){return h(e,GraphQLDirective)}class GraphQLDirective{constructor(e){this.name=e.name,this.description=e.description,this.locations=e.locations,this.isRepeatable=e.isRepeatable??!1,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,e.name||f(0,"Directive must be named."),Array.isArray(e.locations)||f(0,`@${e.name} locations must be an Array.`);const n=e.args??{};t(n)&&!Array.isArray(n)||f(0,`@${e.name} args must be an object with argument names as keys.`),this.args=Q(n).map((([e,t])=>({name:e,description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions&&j(t.extensions),astNode:t.astNode})))}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:De(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLDirective"}}const lt=new GraphQLDirective({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[m.FIELD,m.FRAGMENT_SPREAD,m.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(Be),description:"Included when true."}}}),dt=new GraphQLDirective({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[m.FIELD,m.FRAGMENT_SPREAD,m.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(Be),description:"Skipped when true."}}}),ft=new GraphQLDirective({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[m.FIELD_DEFINITION,m.ARGUMENT_DEFINITION,m.INPUT_FIELD_DEFINITION,m.ENUM_VALUE],args:{reason:{type:Pe,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:"No longer supported"}}}),ht=new GraphQLDirective({name:"specifiedBy",description:"Exposes a URL that specifies the behaviour of this scalar.",locations:[m.SCALAR],args:{url:{type:new GraphQLNonNull(Pe),description:"The URL that specifies the behaviour of this scalar."}}}),mt=Object.freeze([lt,dt,ft,ht]);function yt(e){if(!function(e){return h(e,GraphQLSchema)}(e))throw new Error(`Expected ${l(e)} to be a GraphQL schema.`);return e}class GraphQLSchema{constructor(e){this.__validationErrors=!0===e.assumeValid?[]:void 0,t(e)||f(0,"Must provide configuration object."),!e.types||Array.isArray(e.types)||f(0,`"types" must be Array if provided but got: ${l(e.types)}.`),!e.directives||Array.isArray(e.directives)||f(0,`"directives" must be Array if provided but got: ${l(e.directives)}.`),this.description=e.description,this.extensions=e.extensions&&j(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes,this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=e.directives??mt;const n=new Set(e.types);if(null!=e.types)for(const t of e.types)n.delete(t),Tt(t,n);null!=this._queryType&&Tt(this._queryType,n),null!=this._mutationType&&Tt(this._mutationType,n),null!=this._subscriptionType&&Tt(this._subscriptionType,n);for(const e of this._directives)if(pt(e))for(const t of e.args)Tt(t.type,n);Tt(ze,n),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const e of Array.from(n)){if(null==e)continue;const t=e.name;if(t||f(0,"One of the provided types for building the Schema is missing a name."),void 0!==this._typeMap[t])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`);if(this._typeMap[t]=e,ae(e)){for(const t of e.getInterfaces())if(ae(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.interfaces.push(e)}}else if(oe(e))for(const t of e.getInterfaces())if(ae(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.objects.push(e)}}}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return ce(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){return this._implementationsMap[e.name]??{objects:[],interfaces:[]}}isSubType(e,t){let n=this._subTypeMap[e.name];if(void 0===n){if(n=Object.create(null),ce(e))for(const t of e.getTypes())n[t.name]=!0;else{const t=this.getImplementations(e);for(const e of t.objects)n[e.name]=!0;for(const e of t.interfaces)n[e.name]=!0}this._subTypeMap[e.name]=n}return void 0!==n[t.name]}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find((t=>t.name===e))}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:C(this.getTypeMap()),directives:this.getDirectives().slice(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes??[],assumeValid:void 0!==this.__validationErrors}}get[Symbol.toStringTag](){return"GraphQLSchema"}}function Tt(e,t){const n=ge(e);if(!t.has(n))if(t.add(n),ce(n))for(const e of n.getTypes())Tt(e,t);else if(oe(n)||ae(n)){for(const e of n.getInterfaces())Tt(e,t);for(const e of C(n.getFields())){Tt(e.type,t);for(const n of e.args)Tt(n.type,t)}}else if(pe(n))for(const e of C(n.getFields()))Tt(e.type,t);return t}function Et(e){if(yt(e),e.__validationErrors)return e.__validationErrors;const t=new SchemaValidationContext(e);!function(e){const t=e.schema,n=t.getQueryType();n?oe(n)||e.reportError(`Query root type must be Object type, it cannot be ${l(n)}.`,Nt(t,"query")??n.astNode):e.reportError("Query root type must be provided.",t.astNode);const r=t.getMutationType();r&&!oe(r)&&e.reportError(`Mutation root type must be Object type if provided, it cannot be ${l(r)}.`,Nt(t,"mutation")??r.astNode);const i=t.getSubscriptionType();i&&!oe(i)&&e.reportError(`Subscription root type must be Object type if provided, it cannot be ${l(i)}.`,Nt(t,"subscription")??i.astNode)}(t),function(e){for(const t of e.schema.getDirectives())if(pt(t)){vt(e,t);for(const n of t.args)vt(e,n),fe(n.type)||e.reportError(`The type of @${t.name}(${n.name}:) must be Input Type but got: ${l(n.type)}.`,n.astNode),we(n)&&null!=n.deprecationReason&&e.reportError(`Required argument @${t.name}(${n.name}:) cannot be deprecated.`,[xt(n.astNode),n.astNode?.type])}else e.reportError(`Expected directive but got: ${l(t)}.`,t?.astNode)}(t),function(e){const t=function(e){const t=Object.create(null),n=[],r=Object.create(null);return i;function i(s){if(t[s.name])return;t[s.name]=!0,r[s.name]=n.length;const o=C(s.getFields());for(const t of o)if(de(t.type)&&pe(t.type.ofType)){const s=t.type.ofType,o=r[s.name];if(n.push(t),void 0===o)i(s);else{const t=n.slice(o),r=t.map((e=>e.name)).join(".");e.reportError(`Cannot reference Input Object "${s.name}" within itself through a series of non-null fields: "${r}".`,t.map((e=>e.astNode)))}n.pop()}r[s.name]=void 0}}(e),n=e.schema.getTypeMap();for(const r of C(n))Ie(r)?(ut(r)||vt(e,r),oe(r)||ae(r)?(It(e,r),gt(e,r)):ce(r)?Ot(e,r):ue(r)?St(e,r):pe(r)&&(Lt(e,r),t(r))):e.reportError(`Expected GraphQL named type but got: ${l(r)}.`,r.astNode)}(t);const n=t.getErrors();return e.__validationErrors=n,n}class SchemaValidationContext{constructor(e){this._errors=[],this.schema=e}reportError(e,t){const n=Array.isArray(t)?t.filter(Boolean):t;this.addError(new GraphQLError(e,n))}addError(e){this._errors.push(e)}getErrors(){return this._errors}}function Nt(e,t){const n=Dt(e,(e=>e.operationTypes));for(const e of n)if(e.operation===t)return e.type}function vt(e,t){const n=("string"==typeof(r=t.name)||f(0,"Expected name to be a string."),r.length>1&&"_"===r[0]&&"_"===r[1]?new GraphQLError(`Name "${r}" must not begin with "__", which is reserved by GraphQL introspection.`):$.test(r)?void 0:new GraphQLError(`Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but "${r}" does not.`));var r;n&&e.addError(function(e,t,n){const r=e instanceof Error?e:new Error("Unexpected error value: "+l(e));return Array.isArray(r.path)?r:new GraphQLError(r.message,r.nodes??t,r.source,r.positions,n,r)}(n,t.astNode))}function It(e,t){const n=C(t.getFields());0===n.length&&e.reportError(`Type ${t.name} must define one or more fields.`,At(t));for(const r of n){vt(e,r),he(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Output Type but got: ${l(r.type)}.`,r.astNode?.type);for(const n of r.args){const i=n.name;vt(e,n),fe(n.type)||e.reportError(`The type of ${t.name}.${r.name}(${i}:) must be Input Type but got: ${l(n.type)}.`,n.astNode?.type),we(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${t.name}.${r.name}(${i}:) cannot be deprecated.`,[xt(n.astNode),n.astNode?.type])}}}function gt(e,t){const n=Object.create(null);for(const r of t.getInterfaces())ae(r)?t!==r?n[r.name]?e.reportError(`Type ${t.name} can only implement ${r.name} once.`,wt(t,r)):(n[r.name]=!0,bt(e,t,r),_t(e,t,r)):e.reportError(`Type ${t.name} cannot implement itself because it would create a circular reference.`,wt(t,r)):e.reportError(`Type ${l(t)} must only implement Interface types, it cannot implement ${l(r)}.`,wt(t,r))}function _t(e,t,n){const r=t.getFields();for(const i of C(n.getFields())){const s=i.name,o=r[s];if(o){Ce(e.schema,o.type,i.type)||e.reportError(`Interface field ${n.name}.${s} expects type ${l(i.type)} but ${t.name}.${s} is type ${l(o.type)}.`,[i.astNode?.type,o.astNode?.type]);for(const r of i.args){const i=r.name,a=o.args.find((e=>e.name===i));a?Ge(r.type,a.type)||e.reportError(`Interface field argument ${n.name}.${s}(${i}:) expects type ${l(r.type)} but ${t.name}.${s}(${i}:) is type ${l(a.type)}.`,[r.astNode?.type,a.astNode?.type]):e.reportError(`Interface field argument ${n.name}.${s}(${i}:) expected but ${t.name}.${s} does not provide it.`,[r.astNode,o.astNode])}for(const r of o.args){const o=r.name;!i.args.find((e=>e.name===o))&&we(r)&&e.reportError(`Object field ${t.name}.${s} includes required argument ${o} that is missing from the Interface field ${n.name}.${s}.`,[r.astNode,i.astNode])}}else e.reportError(`Interface field ${n.name}.${s} expected but ${t.name} does not provide it.`,[i.astNode,...At(t)])}}function bt(e,t,n){const r=t.getInterfaces();for(const i of n.getInterfaces())-1===r.indexOf(i)&&e.reportError(i===t?`Type ${t.name} cannot implement ${n.name} because it would create a circular reference.`:`Type ${t.name} must implement ${i.name} because it is implemented by ${n.name}.`,[...wt(n,i),...wt(t,n)])}function Ot(e,t){const n=t.getTypes();0===n.length&&e.reportError(`Union type ${t.name} must define one or more member types.`,At(t));const r=Object.create(null);for(const i of n)r[i.name]?e.reportError(`Union type ${t.name} can only include type ${i.name} once.`,kt(t,i.name)):(r[i.name]=!0,oe(i)||e.reportError(`Union type ${t.name} can only include Object types, it cannot include ${l(i)}.`,kt(t,String(i))))}function St(e,t){const n=t.getValues();0===n.length&&e.reportError(`Enum type ${t.name} must define one or more values.`,At(t));for(const r of n){const n=r.name;vt(e,r),"true"!==n&&"false"!==n&&"null"!==n||e.reportError(`Enum type ${t.name} cannot include value: ${n}.`,r.astNode)}}function Lt(e,t){const n=C(t.getFields());0===n.length&&e.reportError(`Input Object type ${t.name} must define one or more fields.`,At(t));for(const r of n)vt(e,r),fe(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Input Type but got: ${l(r.type)}.`,r.astNode?.type),Re(r)&&null!=r.deprecationReason&&e.reportError(`Required input field ${t.name}.${r.name} cannot be deprecated.`,[xt(r.astNode),r.astNode?.type])}function At(e){const{astNode:t,extensionASTNodes:n}=e;return t?n?[t].concat(n):[t]:n??[]}function Dt(e,t){let n=[];for(const r of At(e))n=n.concat(t(r)??[]);return n}function wt(e,t){return Dt(e,(e=>e.interfaces)).filter((e=>e.name.value===t.name))}function kt(e,t){return Dt(e,(e=>e.types)).filter((e=>e.name.value===t))}function xt(e){return e?.directives?.find((e=>e.name.value===ft.name))}function Ft(e,t){let n;return t.kind===c.LIST_TYPE?(n=Ft(e,t.type),n&&new GraphQLList(n)):t.kind===c.NON_NULL_TYPE?(n=Ft(e,t.type),n&&new GraphQLNonNull(n)):t.kind===c.NAMED_TYPE?e.getType(t.name.value):void ne(0,"Unexpected type node: "+l(t))}class TypeInfo{constructor(e,t,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=t??Rt,n&&(fe(n)&&this._inputTypeStack.push(n),ye(n)&&this._parentTypeStack.push(n),he(n)&&this._typeStack.push(n))}getType(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]}getParentType(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]}getParentInputType(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(e){const t=this._schema;switch(e.kind){case c.SELECTION_SET:{const e=ge(this.getType());this._parentTypeStack.push(ye(e)?e:void 0);break}case c.FIELD:{const n=this.getParentType();let r,i;n&&(r=this._getFieldDef(t,n,e),r&&(i=r.type)),this._fieldDefStack.push(r),this._typeStack.push(he(i)?i:void 0);break}case c.DIRECTIVE:this._directive=t.getDirective(e.name.value);break;case c.OPERATION_DEFINITION:{let n;switch(e.operation){case"query":n=t.getQueryType();break;case"mutation":n=t.getMutationType();break;case"subscription":n=t.getSubscriptionType()}this._typeStack.push(oe(n)?n:void 0);break}case c.INLINE_FRAGMENT:case c.FRAGMENT_DEFINITION:{const n=e.typeCondition,r=n?Ft(t,n):ge(this.getType());this._typeStack.push(he(r)?r:void 0);break}case c.VARIABLE_DEFINITION:{const n=Ft(t,e.type);this._inputTypeStack.push(fe(n)?n:void 0);break}case c.ARGUMENT:{let t,n;const r=this.getDirective()??this.getFieldDef();r&&(t=r.args.find((t=>t.name===e.name.value)),t&&(n=t.type)),this._argument=t,this._defaultValueStack.push(t?t.defaultValue:void 0),this._inputTypeStack.push(fe(n)?n:void 0);break}case c.LIST:{const e=ve(this.getInputType()),t=le(e)?e.ofType:e;this._defaultValueStack.push(void 0),this._inputTypeStack.push(fe(t)?t:void 0);break}case c.OBJECT_FIELD:{const t=ge(this.getInputType());let n,r;pe(t)&&(r=t.getFields()[e.name.value],r&&(n=r.type)),this._defaultValueStack.push(r?r.defaultValue:void 0),this._inputTypeStack.push(fe(n)?n:void 0);break}case c.ENUM:{const t=ge(this.getInputType());let n;ue(t)&&(n=t.getValue(e.value)),this._enumValue=n;break}}}leave(e){switch(e.kind){case c.SELECTION_SET:this._parentTypeStack.pop();break;case c.FIELD:this._fieldDefStack.pop(),this._typeStack.pop();break;case c.DIRECTIVE:this._directive=null;break;case c.OPERATION_DEFINITION:case c.INLINE_FRAGMENT:case c.FRAGMENT_DEFINITION:this._typeStack.pop();break;case c.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case c.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case c.LIST:case c.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case c.ENUM:this._enumValue=null}}}function Rt(e,t,n){const r=n.name.value;return r===st.name&&e.getQueryType()===t?st:r===ot.name&&e.getQueryType()===t?ot:r===at.name&&ye(t)?at:oe(t)||ae(t)?t.getFields()[r]:void 0}function Gt(e,t){return{enter(n){e.enter(n);const r=G(t,n.kind,!1);if(r){const i=r.apply(t,arguments);return void 0!==i&&(e.leave(n),u(i)&&e.enter(i)),i}},leave(n){const r=G(t,n.kind,!0);let i;return r&&(i=r.apply(t,arguments)),e.leave(n),i}}}function Ct(e){return e.kind===c.OPERATION_DEFINITION||e.kind===c.FRAGMENT_DEFINITION}function $t(e){return e.kind===c.SCALAR_TYPE_DEFINITION||e.kind===c.OBJECT_TYPE_DEFINITION||e.kind===c.INTERFACE_TYPE_DEFINITION||e.kind===c.UNION_TYPE_DEFINITION||e.kind===c.ENUM_TYPE_DEFINITION||e.kind===c.INPUT_OBJECT_TYPE_DEFINITION}function Qt(e){return e.kind===c.SCALAR_TYPE_EXTENSION||e.kind===c.OBJECT_TYPE_EXTENSION||e.kind===c.INTERFACE_TYPE_EXTENSION||e.kind===c.UNION_TYPE_EXTENSION||e.kind===c.ENUM_TYPE_EXTENSION||e.kind===c.INPUT_OBJECT_TYPE_EXTENSION}function Ut(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);for(const t of e.getDocument().definitions)$t(t)&&(r[t.name.value]=!0);const i=Object.keys(n).concat(Object.keys(r));return{NamedType(t,s,o,a,u){const p=t.name.value;if(!n[p]&&!r[p]){const n=u[2]??o,r=null!=n&&(l=n,!Array.isArray(l)&&(function(e){return e.kind===c.SCHEMA_DEFINITION||$t(e)||e.kind===c.DIRECTIVE_DEFINITION}(l)||function(e){return e.kind===c.SCHEMA_EXTENSION||Qt(e)}(l)));if(r&&function(e){return-1!==Vt.indexOf(e)}(p))return;const s=Y(p,r?Vt.concat(i):i);e.reportError(new GraphQLError(`Unknown type "${p}".`+P(s),t))}var l}}}const Vt=[...Je,...ct].map((e=>e.name));function jt(e){const t=[],n=[];return{OperationDefinition:e=>(t.push(e),!1),FragmentDefinition:e=>(n.push(e),!1),Document:{leave(){const r=Object.create(null);for(const n of t)for(const t of e.getRecursivelyReferencedFragments(n))r[t.name.value]=!0;for(const t of n){const n=t.name.value;!0!==r[n]&&e.reportError(new GraphQLError(`Fragment "${n}" is never used.`,t))}}}}}function Mt(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():mt;for(const e of r)t[e.name]=e.locations;const i=e.getDocument().definitions;for(const e of i)e.kind===c.DIRECTIVE_DEFINITION&&(t[e.name.value]=e.locations.map((e=>e.value)));return{Directive(n,r,i,s,o){const a=n.name.value,u=t[a];if(!u)return void e.reportError(new GraphQLError(`Unknown directive "@${a}".`,n));const p=function(e){const t=e[e.length-1];switch(!Array.isArray(t)||ne(0),t.kind){case c.OPERATION_DEFINITION:return function(e){switch(e){case"query":return m.QUERY;case"mutation":return m.MUTATION;case"subscription":return m.SUBSCRIPTION}ne(0,"Unexpected operation: "+l(e))}(t.operation);case c.FIELD:return m.FIELD;case c.FRAGMENT_SPREAD:return m.FRAGMENT_SPREAD;case c.INLINE_FRAGMENT:return m.INLINE_FRAGMENT;case c.FRAGMENT_DEFINITION:return m.FRAGMENT_DEFINITION;case c.VARIABLE_DEFINITION:return m.VARIABLE_DEFINITION;case c.SCHEMA_DEFINITION:case c.SCHEMA_EXTENSION:return m.SCHEMA;case c.SCALAR_TYPE_DEFINITION:case c.SCALAR_TYPE_EXTENSION:return m.SCALAR;case c.OBJECT_TYPE_DEFINITION:case c.OBJECT_TYPE_EXTENSION:return m.OBJECT;case c.FIELD_DEFINITION:return m.FIELD_DEFINITION;case c.INTERFACE_TYPE_DEFINITION:case c.INTERFACE_TYPE_EXTENSION:return m.INTERFACE;case c.UNION_TYPE_DEFINITION:case c.UNION_TYPE_EXTENSION:return m.UNION;case c.ENUM_TYPE_DEFINITION:case c.ENUM_TYPE_EXTENSION:return m.ENUM;case c.ENUM_VALUE_DEFINITION:return m.ENUM_VALUE;case c.INPUT_OBJECT_TYPE_DEFINITION:case c.INPUT_OBJECT_TYPE_EXTENSION:return m.INPUT_OBJECT;case c.INPUT_VALUE_DEFINITION:return e[e.length-3].kind===c.INPUT_OBJECT_TYPE_DEFINITION?m.INPUT_FIELD_DEFINITION:m.ARGUMENT_DEFINITION}}(o);p&&-1===u.indexOf(p)&&e.reportError(new GraphQLError(`Directive "@${a}" may not be used on ${p}.`,n))}}}function Pt(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():mt;for(const e of r)t[e.name]=!e.isRepeatable;const i=e.getDocument().definitions;for(const e of i)e.kind===c.DIRECTIVE_DEFINITION&&(t[e.name.value]=!e.repeatable);const s=Object.create(null),o=Object.create(null);return{enter(n){if(null==n.directives)return;let r;if(n.kind===c.SCHEMA_DEFINITION||n.kind===c.SCHEMA_EXTENSION)r=s;else if($t(n)||Qt(n)){const e=n.name.value;r=o[e],void 0===r&&(o[e]=r=Object.create(null))}else r=Object.create(null);for(const i of n.directives){const n=i.name.value;t[n]&&(r[n]?e.reportError(new GraphQLError(`The directive "@${n}" can only be used once at this location.`,[r[n],i])):r[n]=i)}}}}function Bt(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():mt;for(const e of r)t[e.name]=e.args.map((e=>e.name));const i=e.getDocument().definitions;for(const e of i)if(e.kind===c.DIRECTIVE_DEFINITION){const n=e.arguments??[];t[e.name.value]=n.map((e=>e.name.value))}return{Directive(n){const r=n.name.value,i=t[r];if(n.arguments&&i)for(const t of n.arguments){const n=t.name.value;if(-1===i.indexOf(n)){const s=Y(n,i);e.reportError(new GraphQLError(`Unknown argument "${n}" on directive "@${r}".`+P(s),t))}}return!1}}}function Yt(e){let t=Object.create(null);return{Field(){t=Object.create(null)},Directive(){t=Object.create(null)},Argument(n){const r=n.name.value;return t[r]?e.reportError(new GraphQLError(`There can be only one argument named "${r}".`,[t[r],n.name])):t[r]=n.name,!1}}}function Jt(e,t){const n=e.getInputType();if(!n)return;const r=ge(n);if(me(r))try{if(void 0===r.parseLiteral(t,void 0)){const r=l(n);e.reportError(new GraphQLError(`Expected value of type "${r}", found ${q(t)}.`,t))}}catch(r){const i=l(n);r instanceof GraphQLError?e.reportError(r):e.reportError(new GraphQLError(`Expected value of type "${i}", found ${q(t)}; `+r.message,t,void 0,void 0,void 0,r))}else{const r=l(n);e.reportError(new GraphQLError(`Expected value of type "${r}", found ${q(t)}.`,t))}}function qt(e){const t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():mt;for(const e of r)t[e.name]=U(e.args.filter(we),(e=>e.name));const i=e.getDocument().definitions;for(const e of i)if(e.kind===c.DIRECTIVE_DEFINITION){const n=e.arguments??[];t[e.name.value]=U(n.filter(Kt),(e=>e.name.value))}return{Directive:{leave(n){const r=n.name.value,i=t[r];if(i){const t=U(n.arguments??[],(e=>e.name.value));for(const s of Object.keys(i))if(!t[s]){const t=i[s].type,o=ie(t)?l(t):q(t);e.reportError(new GraphQLError(`Directive "@${r}" argument "${s}" of type "${o}" is required, but it was not provided.`,n))}}}}}}function Kt(e){return e.type.kind===c.NON_NULL_TYPE&&null==e.defaultValue}function Xt(e,t,n,r,i){if(de(r)&&!de(t)){const s=void 0!==i;if(!(null!=n&&n.kind!==c.NULL)&&!s)return!1;return Ce(e,t,r.ofType)}return Ce(e,t,r)}function zt(e){return Array.isArray(e)?e.map((([e,t])=>`subfields "${e}" conflict because `+zt(t))).join(" and "):e}function Ht(e,t,n,r,i,s,o){const a=e.getFragment(o);if(!a)return;const[c,u]=rn(e,n,a);if(s!==c){Wt(e,t,n,r,i,s,c);for(let o=0;o<u.length;o++)Ht(e,t,n,r,i,s,u[o])}}function Zt(e,t,n,r,i,s,o){if(s===o)return;if(r.has(s,o,i))return;r.add(s,o,i);const a=e.getFragment(s),c=e.getFragment(o);if(!a||!c)return;const[u,p]=rn(e,n,a),[l,d]=rn(e,n,c);Wt(e,t,n,r,i,u,l);for(let o=0;o<d.length;o++)Zt(e,t,n,r,i,s,d[o]);for(let s=0;s<p.length;s++)Zt(e,t,n,r,i,p[s],o)}function Wt(e,t,n,r,i,s,o){for(const a of Object.keys(s)){const c=o[a];if(c){const o=s[a];for(let s=0;s<o.length;s++)for(let u=0;u<c.length;u++){const p=en(e,n,r,i,a,o[s],c[u]);p&&t.push(p)}}}}function en(e,t,n,r,i,s,o){const[a,c,u]=s,[p,d,f]=o,h=r||a!==p&&oe(a)&&oe(p);if(!h){const e=c.name.value,t=d.name.value;if(e!==t)return[[i,`"${e}" and "${t}" are different fields`],[c],[d]];if(!function(e,t){if(e.length!==t.length)return!1;return e.every((e=>{const n=t.find((t=>t.name.value===e.name.value));return!!n&&(r=e.value,i=n.value,q(r)===q(i));var r,i}))}(c.arguments??[],d.arguments??[]))return[[i,"they have differing arguments"],[c],[d]]}const m=u?.type,y=f?.type;if(m&&y&&tn(m,y))return[[i,`they return conflicting types "${l(m)}" and "${l(y)}"`],[c],[d]];const T=c.selectionSet,E=d.selectionSet;if(T&&E){return function(e,t,n,r){if(e.length>0)return[[t,e.map((([e])=>e))],e.reduce(((e,[,t])=>e.concat(t)),[n]),e.reduce(((e,[,,t])=>e.concat(t)),[r])]}(function(e,t,n,r,i,s,o,a){const c=[],[u,p]=nn(e,t,i,s),[l,d]=nn(e,t,o,a);if(Wt(e,c,t,n,r,u,l),0!==d.length)for(let i=0;i<d.length;i++)Ht(e,c,t,n,r,u,d[i]);if(0!==p.length)for(let i=0;i<p.length;i++)Ht(e,c,t,n,r,l,p[i]);for(let i=0;i<p.length;i++)for(let s=0;s<d.length;s++)Zt(e,c,t,n,r,p[i],d[s]);return c}(e,t,n,h,ge(m),T,ge(y),E),i,c,d)}}function tn(e,t){return le(e)?!le(t)||tn(e.ofType,t.ofType):!!le(t)||(de(e)?!de(t)||tn(e.ofType,t.ofType):!!de(t)||!(!me(e)&&!me(t))&&e!==t)}function nn(e,t,n,r){let i=t.get(r);if(!i){const s=Object.create(null),o=Object.create(null);sn(e,n,r,s,o),i=[s,Object.keys(o)],t.set(r,i)}return i}function rn(e,t,n){const r=t.get(n.selectionSet);if(r)return r;const i=Ft(e.getSchema(),n.typeCondition);return nn(e,t,i,n.selectionSet)}function sn(e,t,n,r,i){for(const s of n.selections)switch(s.kind){case c.FIELD:{const e=s.name.value;let n;(oe(t)||ae(t))&&(n=t.getFields()[e]);const i=s.alias?s.alias.value:e;r[i]||(r[i]=[]),r[i].push([t,s,n]);break}case c.FRAGMENT_SPREAD:i[s.name.value]=!0;break;case c.INLINE_FRAGMENT:{const n=s.typeCondition,o=n?Ft(e.getSchema(),n):t;sn(e,o,s.selectionSet,r,i);break}}}class PairSet{constructor(){this._data=Object.create(null)}has(e,t,n){const r=this._data[e],i=r&&r[t];return void 0!==i&&(!1!==n||!1===i)}add(e,t,n){this._pairSetAdd(e,t,n),this._pairSetAdd(t,e,n)}_pairSetAdd(e,t,n){let r=this._data[e];r||(r=Object.create(null),this._data[e]=r),r[t]=n}}function on(e){const t=[];let n=Object.create(null);return{ObjectValue:{enter(){t.push(n),n=Object.create(null)},leave(){n=t.pop()}},ObjectField(t){const r=t.name.value;n[r]?e.reportError(new GraphQLError(`There can be only one input field named "${r}".`,[n[r],t.name])):n[r]=t.name}}}function an(e,t){return!!(oe(e)||ae(e)||pe(e))&&null!=e.getFields()[t]}const cn={[c.SCALAR_TYPE_DEFINITION]:c.SCALAR_TYPE_EXTENSION,[c.OBJECT_TYPE_DEFINITION]:c.OBJECT_TYPE_EXTENSION,[c.INTERFACE_TYPE_DEFINITION]:c.INTERFACE_TYPE_EXTENSION,[c.UNION_TYPE_DEFINITION]:c.UNION_TYPE_EXTENSION,[c.ENUM_TYPE_DEFINITION]:c.ENUM_TYPE_EXTENSION,[c.INPUT_OBJECT_TYPE_DEFINITION]:c.INPUT_OBJECT_TYPE_EXTENSION};const un=Object.freeze([function(e){return{Document(t){for(const n of t.definitions)if(!Ct(n)){const t=n.kind===c.SCHEMA_DEFINITION||n.kind===c.SCHEMA_EXTENSION?"schema":'"'+n.name.value+'"';e.reportError(new GraphQLError(`The ${t} definition is not executable.`,n))}return!1}}},function(e){const t=Object.create(null);return{OperationDefinition(n){const r=n.name;return r&&(t[r.value]?e.reportError(new GraphQLError(`There can be only one operation named "${r.value}".`,[t[r.value],r])):t[r.value]=r),!1},FragmentDefinition:()=>!1}},function(e){let t=0;return{Document(e){t=e.definitions.filter((e=>e.kind===c.OPERATION_DEFINITION)).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new GraphQLError("This anonymous operation must be the only defined operation.",n))}}},function(e){return{OperationDefinition(t){"subscription"===t.operation&&1!==t.selectionSet.selections.length&&e.reportError(new GraphQLError(t.name?`Subscription "${t.name.value}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",t.selectionSet.selections.slice(1)))}}},Ut,function(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const t=Ft(e.getSchema(),n);if(t&&!ye(t)){const t=q(n);e.reportError(new GraphQLError(`Fragment cannot condition on non composite type "${t}".`,n))}}},FragmentDefinition(t){const n=Ft(e.getSchema(),t.typeCondition);if(n&&!ye(n)){const n=q(t.typeCondition);e.reportError(new GraphQLError(`Fragment "${t.name.value}" cannot condition on non composite type "${n}".`,t.typeCondition))}}}},function(e){return{VariableDefinition(t){const n=Ft(e.getSchema(),t.type);if(n&&!fe(n)){const n=t.variable.name.value,r=q(t.type);e.reportError(new GraphQLError(`Variable "$${n}" cannot be non-input type "${r}".`,t.type))}}}},function(e){return{Field(t){const n=e.getType(),r=t.selectionSet;if(n)if(me(ge(n))){if(r){const i=t.name.value,s=l(n);e.reportError(new GraphQLError(`Field "${i}" must not have a selection since type "${s}" has no subfields.`,r))}}else if(!r){const r=t.name.value,i=l(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have a selection of subfields. Did you mean "${r} { ... }"?`,t))}}}},function(e){return{Field(t){const n=e.getParentType();if(n){if(!e.getFieldDef()){const r=e.getSchema(),i=t.name.value;let s=P("to use an inline fragment on",function(e,t,n){if(!Te(t))return[];const r=new Set,i=Object.create(null);for(const s of e.getPossibleTypes(t))if(s.getFields()[n]){r.add(s),i[s.name]=1;for(const e of s.getInterfaces())e.getFields()[n]&&(r.add(e),i[e.name]=(i[e.name]??0)+1)}return Array.from(r).sort(((t,n)=>{const r=i[n.name]-i[t.name];return 0!==r?r:ae(t)&&e.isSubType(t,n)?-1:ae(n)&&e.isSubType(n,t)?1:t.name.localeCompare(n.name)})).map((e=>e.name))}(r,n,i));""===s&&(s=P(function(e,t){if(oe(e)||ae(e)){return Y(t,Object.keys(e.getFields()))}return[]}(n,i))),e.reportError(new GraphQLError(`Cannot query field "${i}" on type "${n.name}".`+s,t))}}}}},function(e){const t=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(n){const r=n.name.value;return t[r]?e.reportError(new GraphQLError(`There can be only one fragment named "${r}".`,[t[r],n.name])):t[r]=n.name,!1}}},function(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new GraphQLError(`Unknown fragment "${n}".`,t.name))}}},jt,function(e){return{InlineFragment(t){const n=e.getType(),r=e.getParentType();if(ye(n)&&ye(r)&&!$e(e.getSchema(),n,r)){const i=l(r),s=l(n);e.reportError(new GraphQLError(`Fragment cannot be spread here as objects of type "${i}" can never be of type "${s}".`,t))}},FragmentSpread(t){const n=t.name.value,r=function(e,t){const n=e.getFragment(t);if(n){const t=Ft(e.getSchema(),n.typeCondition);if(ye(t))return t}}(e,n),i=e.getParentType();if(r&&i&&!$e(e.getSchema(),r,i)){const s=l(i),o=l(r);e.reportError(new GraphQLError(`Fragment "${n}" cannot be spread here as objects of type "${s}" can never be of type "${o}".`,t))}}}},function(e){const t=Object.create(null),n=[],r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:e=>(i(e),!1)};function i(s){if(t[s.name.value])return;const o=s.name.value;t[o]=!0;const a=e.getFragmentSpreads(s.selectionSet);if(0!==a.length){r[o]=n.length;for(const t of a){const s=t.name.value,o=r[s];if(n.push(t),void 0===o){const t=e.getFragment(s);t&&i(t)}else{const t=n.slice(o),r=t.slice(0,-1).map((e=>'"'+e.name.value+'"')).join(", ");e.reportError(new GraphQLError(`Cannot spread fragment "${s}" within itself`+(""!==r?` via ${r}.`:"."),t))}n.pop()}r[o]=void 0}}},function(e){let t=Object.create(null);return{OperationDefinition(){t=Object.create(null)},VariableDefinition(n){const r=n.variable.name.value;t[r]?e.reportError(new GraphQLError(`There can be only one variable named "$${r}".`,[t[r],n.variable.name])):t[r]=n.variable.name}}},function(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const r=e.getRecursiveVariableUsages(n);for(const{node:i}of r){const r=i.name.value;!0!==t[r]&&e.reportError(new GraphQLError(n.name?`Variable "$${r}" is not defined by operation "${n.name.value}".`:`Variable "$${r}" is not defined.`,[i,n]))}}},VariableDefinition(e){t[e.variable.name.value]=!0}}},function(e){let t=[];return{OperationDefinition:{enter(){t=[]},leave(n){const r=Object.create(null),i=e.getRecursiveVariableUsages(n);for(const{node:e}of i)r[e.name.value]=!0;for(const i of t){const t=i.variable.name.value;!0!==r[t]&&e.reportError(new GraphQLError(n.name?`Variable "$${t}" is never used in operation "${n.name.value}".`:`Variable "$${t}" is never used.`,i))}}},VariableDefinition(e){t.push(e)}}},Mt,Pt,function(e){return{...Bt(e),Argument(t){const n=e.getArgument(),r=e.getFieldDef(),i=e.getParentType();if(!n&&r&&i){const n=t.name.value,s=Y(n,r.args.map((e=>e.name)));e.reportError(new GraphQLError(`Unknown argument "${n}" on field "${i.name}.${r.name}".`+P(s),t))}}}},Yt,function(e){return{ListValue(t){if(!le(ve(e.getParentInputType())))return Jt(e,t),!1},ObjectValue(t){const n=ge(e.getInputType());if(!pe(n))return Jt(e,t),!1;const r=U(t.fields,(e=>e.name.value));for(const i of C(n.getFields())){if(!r[i.name]&&Re(i)){const r=l(i.type);e.reportError(new GraphQLError(`Field "${n.name}.${i.name}" of required type "${r}" was not provided.`,t))}}},ObjectField(t){const n=ge(e.getParentInputType());if(!e.getInputType()&&pe(n)){const r=Y(t.name.value,Object.keys(n.getFields()));e.reportError(new GraphQLError(`Field "${t.name.value}" is not defined by type "${n.name}".`+P(r),t))}},NullValue(t){const n=e.getInputType();de(n)&&e.reportError(new GraphQLError(`Expected value of type "${l(n)}", found ${q(t)}.`,t))},EnumValue:t=>Jt(e,t),IntValue:t=>Jt(e,t),FloatValue:t=>Jt(e,t),StringValue:t=>Jt(e,t),BooleanValue:t=>Jt(e,t)}},function(e){return{...qt(e),Field:{leave(t){const n=e.getFieldDef();if(!n)return!1;const r=U(t.arguments??[],(e=>e.name.value));for(const i of n.args){if(!r[i.name]&&we(i)){const r=l(i.type);e.reportError(new GraphQLError(`Field "${n.name}" argument "${i.name}" of type "${r}" is required, but it was not provided.`,t))}}}}}},function(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const r=e.getRecursiveVariableUsages(n);for(const{node:n,type:i,defaultValue:s}of r){const r=n.name.value,o=t[r];if(o&&i){const t=e.getSchema(),a=Ft(t,o.type);if(a&&!Xt(t,a,o.defaultValue,i,s)){const t=l(a),s=l(i);e.reportError(new GraphQLError(`Variable "$${r}" of type "${t}" used in position expecting type "${s}".`,[o,n]))}}}}},VariableDefinition(e){t[e.variable.name.value]=e}}},function(e){const t=new PairSet,n=new Map;return{SelectionSet(r){const i=function(e,t,n,r,i){const s=[],[o,a]=nn(e,t,r,i);if(function(e,t,n,r,i){for(const[s,o]of Q(i))if(o.length>1)for(let i=0;i<o.length;i++)for(let a=i+1;a<o.length;a++){const c=en(e,n,r,!1,s,o[i],o[a]);c&&t.push(c)}}(e,s,t,n,o),0!==a.length)for(let r=0;r<a.length;r++){Ht(e,s,t,n,!1,o,a[r]);for(let i=r+1;i<a.length;i++)Zt(e,s,t,n,!1,a[r],a[i])}return s}(e,n,t,e.getParentType(),r);for(const[[t,n],r,s]of i){const i=zt(n);e.reportError(new GraphQLError(`Fields "${t}" conflict because ${i}. Use different aliases on the fields to fetch both if this was intentional.`,r.concat(s)))}}}},on]),pn=Object.freeze([function(e){const t=e.getSchema(),n=t?.astNode??t?.getQueryType()??t?.getMutationType()??t?.getSubscriptionType();let r=0;return{SchemaDefinition(t){n?e.reportError(new GraphQLError("Cannot define a new schema within a schema extension.",t)):(r>0&&e.reportError(new GraphQLError("Must provide only one schema definition.",t)),++r)}}},function(e){const t=e.getSchema(),n=Object.create(null),r=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:i,SchemaExtension:i};function i(t){const i=t.operationTypes??[];for(const t of i){const i=t.operation,s=n[i];r[i]?e.reportError(new GraphQLError(`Type for ${i} already defined in the schema. It cannot be redefined.`,t)):s?e.reportError(new GraphQLError(`There can be only one ${i} type in schema.`,[s,t])):n[i]=t}return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r};function r(r){const i=r.name.value;if(!n?.getType(i))return t[i]?e.reportError(new GraphQLError(`There can be only one type named "${i}".`,[t[i],r.name])):t[i]=r.name,!1;e.reportError(new GraphQLError(`Type "${i}" already exists in the schema. It cannot also be defined in this type definition.`,r.name))}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{EnumTypeDefinition:i,EnumTypeExtension:i};function i(t){const i=t.name.value;r[i]||(r[i]=Object.create(null));const s=t.values??[],o=r[i];for(const t of s){const r=t.name.value,s=n[i];ue(s)&&s.getValue(r)?e.reportError(new GraphQLError(`Enum value "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,t.name)):o[r]?e.reportError(new GraphQLError(`Enum value "${i}.${r}" can only be defined once.`,[o[r],t.name])):o[r]=t.name}return!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{InputObjectTypeDefinition:i,InputObjectTypeExtension:i,InterfaceTypeDefinition:i,InterfaceTypeExtension:i,ObjectTypeDefinition:i,ObjectTypeExtension:i};function i(t){const i=t.name.value;r[i]||(r[i]=Object.create(null));const s=t.fields??[],o=r[i];for(const t of s){const r=t.name.value;an(n[i],r)?e.reportError(new GraphQLError(`Field "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,t.name)):o[r]?e.reportError(new GraphQLError(`Field "${i}.${r}" can only be defined once.`,[o[r],t.name])):o[r]=t.name}return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{DirectiveDefinition(r){const i=r.name.value;if(!n?.getDirective(i))return t[i]?e.reportError(new GraphQLError(`There can be only one directive named "@${i}".`,[t[i],r.name])):t[i]=r.name,!1;e.reportError(new GraphQLError(`Directive "@${i}" already exists in the schema. It cannot be redefined.`,r.name))}}},Ut,Mt,Pt,function(e){const t=e.getSchema(),n=Object.create(null);for(const t of e.getDocument().definitions)$t(t)&&(n[t.name.value]=t);return{ScalarTypeExtension:r,ObjectTypeExtension:r,InterfaceTypeExtension:r,UnionTypeExtension:r,EnumTypeExtension:r,InputObjectTypeExtension:r};function r(r){const i=r.name.value,s=n[i],o=t?.getType(i);let a;if(s?a=cn[s.kind]:o&&(a=function(e){if(se(e))return c.SCALAR_TYPE_EXTENSION;if(oe(e))return c.OBJECT_TYPE_EXTENSION;if(ae(e))return c.INTERFACE_TYPE_EXTENSION;if(ce(e))return c.UNION_TYPE_EXTENSION;if(ue(e))return c.ENUM_TYPE_EXTENSION;if(pe(e))return c.INPUT_OBJECT_TYPE_EXTENSION;ne(0,"Unexpected type: "+l(e))}(o)),a){if(a!==r.kind){const t=function(e){switch(e){case c.SCALAR_TYPE_EXTENSION:return"scalar";case c.OBJECT_TYPE_EXTENSION:return"object";case c.INTERFACE_TYPE_EXTENSION:return"interface";case c.UNION_TYPE_EXTENSION:return"union";case c.ENUM_TYPE_EXTENSION:return"enum";case c.INPUT_OBJECT_TYPE_EXTENSION:return"input object"}ne(0,"Unexpected kind: "+l(e))}(r.kind);e.reportError(new GraphQLError(`Cannot extend non-${t} type "${i}".`,s?[s,r]:r))}}else{let s=Object.keys(n);t&&(s=s.concat(Object.keys(t.getTypeMap())));const o=Y(i,s);e.reportError(new GraphQLError(`Cannot extend type "${i}" because it is not defined.`+P(o),r.name))}}},Bt,Yt,on,qt]);class ASTValidationContext{constructor(e,t){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=t}reportError(e){this._onError(e)}getDocument(){return this._ast}getFragment(e){let t=this._fragments;return t||(this._fragments=t=this.getDocument().definitions.reduce(((e,t)=>(t.kind===c.FRAGMENT_DEFINITION&&(e[t.name.value]=t),e)),Object.create(null))),t[e]}getFragmentSpreads(e){let t=this._fragmentSpreads.get(e);if(!t){t=[];const n=[e];for(;0!==n.length;){const e=n.pop();for(const r of e.selections)r.kind===c.FRAGMENT_SPREAD?t.push(r):r.selectionSet&&n.push(r.selectionSet)}this._fragmentSpreads.set(e,t)}return t}getRecursivelyReferencedFragments(e){let t=this._recursivelyReferencedFragments.get(e);if(!t){t=[];const n=Object.create(null),r=[e.selectionSet];for(;0!==r.length;){const e=r.pop();for(const i of this.getFragmentSpreads(e)){const e=i.name.value;if(!0!==n[e]){n[e]=!0;const i=this.getFragment(e);i&&(t.push(i),r.push(i.selectionSet))}}}this._recursivelyReferencedFragments.set(e,t)}return t}}class SDLValidationContext extends ASTValidationContext{constructor(e,t,n){super(e,n),this._schema=t}getSchema(){return this._schema}}class ValidationContext extends ASTValidationContext{constructor(e,t,n,r){super(t,r),this._schema=e,this._typeInfo=n,this._variableUsages=new Map,this._recursiveVariableUsages=new Map}getSchema(){return this._schema}getVariableUsages(e){let t=this._variableUsages.get(e);if(!t){const n=[],r=new TypeInfo(this._schema);F(e,Gt(r,{VariableDefinition:()=>!1,Variable(e){n.push({node:e,type:r.getInputType(),defaultValue:r.getDefaultValue()})}})),t=n,this._variableUsages.set(e,t)}return t}getRecursiveVariableUsages(e){let t=this._recursiveVariableUsages.get(e);if(!t){t=this.getVariableUsages(e);for(const n of this.getRecursivelyReferencedFragments(e))t=t.concat(this.getVariableUsages(n));this._recursiveVariableUsages.set(e,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}}function ln(e,t,n=un,r=new TypeInfo(e),i={maxErrors:void 0}){t||f(0,"Must provide document."),function(e){const t=Et(e);if(0!==t.length)throw new Error(t.map((e=>e.message)).join("\n\n"))}(e);const s=Object.freeze({}),o=[],a=new ValidationContext(e,t,r,(e=>{if(null!=i.maxErrors&&o.length>=i.maxErrors)throw o.push(new GraphQLError("Too many validation errors, error limit reached. Validation aborted.")),s;o.push(e)})),c=R(n.map((e=>e(a))));try{F(t,Gt(r,c))}catch(e){if(e!==s)throw e}return o}function dn(e,t,n=pn){const r=[],i=new SDLValidationContext(e,t,(e=>{r.push(e)}));return F(e,R(n.map((e=>e(i))))),r}function fn(e,t,n){if(e){if(e.kind===c.VARIABLE){const r=e.name.value;if(null==n||void 0===n[r])return;const i=n[r];if(null===i&&de(t))return;return i}if(de(t)){if(e.kind===c.NULL)return;return fn(e,t.ofType,n)}if(e.kind===c.NULL)return null;if(le(t)){const r=t.ofType;if(e.kind===c.LIST){const t=[];for(const i of e.values)if(hn(i,n)){if(de(r))return;t.push(null)}else{const e=fn(i,r,n);if(void 0===e)return;t.push(e)}return t}const i=fn(e,r,n);if(void 0===i)return;return[i]}if(pe(t)){if(e.kind!==c.OBJECT)return;const r=Object.create(null),i=U(e.fields,(e=>e.name.value));for(const e of C(t.getFields())){const t=i[e.name];if(!t||hn(t.value,n)){if(void 0!==e.defaultValue)r[e.name]=e.defaultValue;else if(de(e.type))return;continue}const s=fn(t.value,e.type,n);if(void 0===s)return;r[e.name]=s}return r}if(me(t)){let r;try{r=t.parseLiteral(e,n)}catch(e){return}if(void 0===r)return;return r}ne(0,"Unexpected input type: "+l(t))}}function hn(e,t){return e.kind===c.VARIABLE&&(null==t||void 0===t[e.name.value])}function mn(e,t,n){const r=t.directives?.find((t=>t.name.value===e.name));if(r)return function(e,t,n){const r={},i=U(t.arguments??[],(e=>e.name.value));for(const a of e.args){const e=a.name,u=a.type,p=i[e];if(!p){if(void 0!==a.defaultValue)r[e]=a.defaultValue;else if(de(u))throw new GraphQLError(`Argument "${e}" of required type "${l(u)}" was not provided.`,t);continue}const d=p.value;let f=d.kind===c.NULL;if(d.kind===c.VARIABLE){const t=d.name.value;if(null==n||(s=n,o=t,!Object.prototype.hasOwnProperty.call(s,o))){if(void 0!==a.defaultValue)r[e]=a.defaultValue;else if(de(u))throw new GraphQLError(`Argument "${e}" of required type "${l(u)}" was provided the variable "$${t}" which was not provided a runtime value.`,d);continue}f=null==n[t]}if(f&&de(u))throw new GraphQLError(`Argument "${e}" of non-null type "${l(u)}" must not be null.`,d);const h=fn(d,u,n);if(void 0===h)throw new GraphQLError(`Argument "${e}" has invalid value ${q(d)}.`,d);r[e]=h}var s,o;return r}(e,r,n)}function yn(e,n){t(e)&&t(e.__schema)||f(0,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${l(e)}.`);const r=e.__schema,i=M(r.types,(e=>e.name),(e=>function(e){if(null!=e&&null!=e.name&&null!=e.kind)switch(e.kind){case rt.SCALAR:return new GraphQLScalarType({name:(r=e).name,description:r.description,specifiedByUrl:r.specifiedByUrl});case rt.OBJECT:return new GraphQLObjectType({name:(n=e).name,description:n.description,interfaces:()=>y(n),fields:()=>T(n)});case rt.INTERFACE:return new GraphQLInterfaceType({name:(t=e).name,description:t.description,interfaces:()=>y(t),fields:()=>T(t)});case rt.UNION:return function(e){if(!e.possibleTypes){const t=l(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new GraphQLUnionType({name:e.name,description:e.description,types:()=>e.possibleTypes.map(h)})}(e);case rt.ENUM:return function(e){if(!e.enumValues){const t=l(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new GraphQLEnumType({name:e.name,description:e.description,values:M(e.enumValues,(e=>e.name),(e=>({description:e.description,deprecationReason:e.deprecationReason})))})}(e);case rt.INPUT_OBJECT:return function(e){if(!e.inputFields){const t=l(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new GraphQLInputObjectType({name:e.name,description:e.description,fields:()=>N(e.inputFields)})}(e)}var t;var n;var r;const i=l(e);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${i}.`)}(e)));for(const e of[...Je,...ct])i[e.name]&&(i[e.name]=e);const s=r.queryType?h(r.queryType):null,o=r.mutationType?h(r.mutationType):null,a=r.subscriptionType?h(r.subscriptionType):null,c=r.directives?r.directives.map((function(e){if(!e.args){const t=l(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(!e.locations){const t=l(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:N(e.args)})})):[];return new GraphQLSchema({description:r.description,query:s,mutation:o,subscription:a,types:C(i),directives:c,assumeValid:n?.assumeValid});function u(e){if(e.kind===rt.LIST){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");return new GraphQLList(u(t))}if(e.kind===rt.NON_NULL){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");const n=u(t);return new GraphQLNonNull(function(e){if(!Ne(e))throw new Error(`Expected ${l(e)} to be a GraphQL nullable type.`);return e}(n))}return d(e)}function d(e){const t=e.name;if(!t)throw new Error(`Unknown type reference: ${l(e)}.`);const n=i[t];if(!n)throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`);return n}function h(e){return function(e){if(!oe(e))throw new Error(`Expected ${l(e)} to be a GraphQL Object type.`);return e}(d(e))}function m(e){return function(e){if(!ae(e))throw new Error(`Expected ${l(e)} to be a GraphQL Interface type.`);return e}(d(e))}function y(e){if(null===e.interfaces&&e.kind===rt.INTERFACE)return[];if(!e.interfaces){const t=l(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(m)}function T(e){if(!e.fields)throw new Error(`Introspection result missing fields: ${l(e)}.`);return M(e.fields,(e=>e.name),E)}function E(e){const t=u(e.type);if(!he(t)){const e=l(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(!e.args){const t=l(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:N(e.args)}}function N(e){return M(e,(e=>e.name),v)}function v(e){const t=u(e.type);if(!fe(t)){const e=l(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}const n=null!=e.defaultValue?fn(function(e,t){const n=new Parser(e,t);n.expectToken(p.SOF);const r=n.parseValueLiteral(!1);return n.expectToken(p.EOF),r}(e.defaultValue),t):void 0;return{description:e.description,type:t,defaultValue:n,deprecationReason:e.deprecationReason}}}function Tn(e,t,n){const r=[],i=Object.create(null),s=[];let o;const a=[];for(const e of t.definitions)if(e.kind===c.SCHEMA_DEFINITION)o=e;else if(e.kind===c.SCHEMA_EXTENSION)a.push(e);else if($t(e))r.push(e);else if(Qt(e)){const t=e.name.value,n=i[t];i[t]=n?n.concat([e]):[e]}else e.kind===c.DIRECTIVE_DEFINITION&&s.push(e);if(0===Object.keys(i).length&&0===r.length&&0===s.length&&0===a.length&&null==o)return e;const u=Object.create(null);for(const t of e.types)u[t.name]=h(t);for(const e of r){const t=e.name.value;u[t]=En[t]??S(e)}const p={query:e.query&&f(e.query),mutation:e.mutation&&f(e.mutation),subscription:e.subscription&&f(e.subscription),...o&&T([o]),...T(a)};return{description:o?.description?.value,...p,types:C(u),directives:[...e.directives.map((function(e){const t=e.toConfig();return new GraphQLDirective({...t,args:V(t.args,y)})})),...s.map((function(e){const t=e.locations.map((({value:e})=>e));return new GraphQLDirective({name:e.name.value,description:e.description?.value,locations:t,isRepeatable:e.repeatable,args:I(e.arguments),astNode:e})}))],extensions:void 0,astNode:o??e.astNode,extensionASTNodes:e.extensionASTNodes.concat(a),assumeValid:n?.assumeValid??!1};function d(e){return le(e)?new GraphQLList(d(e.ofType)):de(e)?new GraphQLNonNull(d(e.ofType)):f(e)}function f(e){return u[e.name]}function h(e){return ut(e)||qe(e)?e:se(e)?function(e){const t=e.toConfig(),n=i[t.name]??[];let r=t.specifiedByUrl;for(const e of n)r=vn(e)??r;return new GraphQLScalarType({...t,specifiedByUrl:r,extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):oe(e)?function(e){const t=e.toConfig(),n=i[t.name]??[];return new GraphQLObjectType({...t,interfaces:()=>[...e.getInterfaces().map(f),...b(n)],fields:()=>({...V(t.fields,m),...v(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):ae(e)?function(e){const t=e.toConfig(),n=i[t.name]??[];return new GraphQLInterfaceType({...t,interfaces:()=>[...e.getInterfaces().map(f),...b(n)],fields:()=>({...V(t.fields,m),...v(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):ce(e)?function(e){const t=e.toConfig(),n=i[t.name]??[];return new GraphQLUnionType({...t,types:()=>[...e.getTypes().map(f),...O(n)],extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):ue(e)?function(e){const t=e.toConfig(),n=i[e.name]??[];return new GraphQLEnumType({...t,values:{...t.values,..._(n)},extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):pe(e)?function(e){const t=e.toConfig(),n=i[t.name]??[];return new GraphQLInputObjectType({...t,fields:()=>({...V(t.fields,(e=>({...e,type:d(e.type)}))),...g(n)}),extensionASTNodes:t.extensionASTNodes.concat(n)})}(e):void ne(0,"Unexpected type: "+l(e))}function m(e){return{...e,type:d(e.type),args:V(e.args,y)}}function y(e){return{...e,type:d(e.type)}}function T(e){const t={};for(const n of e){const e=n.operationTypes??[];for(const n of e)t[n.operation]=E(n.type)}return t}function E(e){const t=e.name.value,n=En[t]??u[t];if(void 0===n)throw new Error(`Unknown type: "${t}".`);return n}function N(e){return e.kind===c.LIST_TYPE?new GraphQLList(N(e.type)):e.kind===c.NON_NULL_TYPE?new GraphQLNonNull(N(e.type)):E(e)}function v(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e)t[n.name.value]={type:N(n.type),description:n.description?.value,args:I(n.arguments),deprecationReason:Nn(n),astNode:n}}return t}function I(e){const t=e??[],n=Object.create(null);for(const e of t){const t=N(e.type);n[e.name.value]={type:t,description:e.description?.value,defaultValue:fn(e.defaultValue,t),deprecationReason:Nn(e),astNode:e}}return n}function g(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e){const e=N(n.type);t[n.name.value]={type:e,description:n.description?.value,defaultValue:fn(n.defaultValue,e),deprecationReason:Nn(n),astNode:n}}}return t}function _(e){const t=Object.create(null);for(const n of e){const e=n.values??[];for(const n of e)t[n.name.value]={description:n.description?.value,deprecationReason:Nn(n),astNode:n}}return t}function b(e){const t=[];for(const n of e){const e=n.interfaces??[];for(const n of e)t.push(E(n))}return t}function O(e){const t=[];for(const n of e){const e=n.types??[];for(const n of e)t.push(E(n))}return t}function S(e){const t=e.name.value,n=i[t]??[];switch(e.kind){case c.OBJECT_TYPE_DEFINITION:{const r=n,i=[e,...r];return new GraphQLObjectType({name:t,description:e.description?.value,interfaces:()=>b(i),fields:()=>v(i),astNode:e,extensionASTNodes:r})}case c.INTERFACE_TYPE_DEFINITION:{const r=n,i=[e,...r];return new GraphQLInterfaceType({name:t,description:e.description?.value,interfaces:()=>b(i),fields:()=>v(i),astNode:e,extensionASTNodes:r})}case c.ENUM_TYPE_DEFINITION:{const r=n,i=[e,...r];return new GraphQLEnumType({name:t,description:e.description?.value,values:_(i),astNode:e,extensionASTNodes:r})}case c.UNION_TYPE_DEFINITION:{const r=n,i=[e,...r];return new GraphQLUnionType({name:t,description:e.description?.value,types:()=>O(i),astNode:e,extensionASTNodes:r})}case c.SCALAR_TYPE_DEFINITION:{const r=n;return new GraphQLScalarType({name:t,description:e.description?.value,specifiedByUrl:vn(e),astNode:e,extensionASTNodes:r})}case c.INPUT_OBJECT_TYPE_DEFINITION:{const r=n,i=[e,...r];return new GraphQLInputObjectType({name:t,description:e.description?.value,fields:()=>g(i),astNode:e,extensionASTNodes:r})}}ne(0,"Unexpected type definition node: "+l(e))}}const En=U(Je.concat(ct),(e=>e.name));function Nn(e){return mn(ft,e)?.reason}function vn(e){return mn(ht,e)?.url}function In(e,t){null!=e&&e.kind===c.DOCUMENT||f(0,"Must provide valid Document AST."),!0!==t?.assumeValid&&!0!==t?.assumeValidSDL&&function(e){const t=dn(e);if(0!==t.length)throw new Error(t.map((e=>e.message)).join("\n\n"))}(e);const n=Tn({description:void 0,types:[],directives:[],extensions:void 0,extensionASTNodes:[],assumeValid:!1},e,t);if(null==n.astNode)for(const e of n.types)switch(e.name){case"Query":n.query=e;break;case"Mutation":n.mutation=e;break;case"Subscription":n.subscription=e}const{directives:r}=n;for(const e of mt)r.every((t=>t.name!==e.name))&&r.push(e);return new GraphQLSchema(n)}const gn=[jt],_n=[function(e){return{OperationDefinition:t=>(t.name||e.reportError(new GraphQLError("Apollo does not support anonymous operations",[t])),!1)}},function(e){return{Field(t){"__typename"==(t.alias&&t.alias.value)&&e.reportError(new GraphQLError("Apollo needs to be able to insert __typename when needed, please do not use it as an alias",[t]))}}},...un.filter((e=>!gn.includes(e)))];class GraphQLSchemaValidationError extends Error{constructor(e){super(e.map((e=>e.message)).join("\n\n")),this.validationErrors=e,this.name="GraphQLSchemaValidationError"}}function bn(e){const t=Et(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}function On(e){var t,n;return null===(n=null===(t=e.loc)||void 0===t?void 0:t.source)||void 0===n?void 0:n.name}function Sn(e){return e.startsWith("__")}const Ln={kind:c.FIELD,name:{kind:c.NAME,value:"__typename"}};function An(e){switch(e.kind){case"Variable":return{kind:e.kind,value:e.name.value};case"ListValue":return{kind:e.kind,value:e.values.map(An)};case"ObjectValue":return{kind:e.kind,value:e.fields.reduce(((e,t)=>(e[t.name.value]=An(t.value),e)),{})};default:return e}}function Dn(e,t,n){n.addTypename&&(t=F(t,{enter:{SelectionSet:e=>({...e,selections:e.selections.filter((e=>!("Field"===e.kind&&"__typename"===e.name.value)))})},leave(e){if(("Field"===e.kind||"FragmentDefinition"===e.kind)&&e.selectionSet)return{...e,selectionSet:{...e.selectionSet,selections:[Ln,...e.selectionSet.selections]}}}}));const r=new Compiler(e,n),i=Object.create(null),s=Object.create(null);for(const e of t.definitions)switch(e.kind){case c.OPERATION_DEFINITION:const t=r.compileOperation(e);i[t.operationName]=t;break;case c.FRAGMENT_DEFINITION:const n=r.compileFragment(e);s[n.fragmentName]=n}for(const e of r.unresolvedFragmentSpreads){const t=s[e.fragmentName];if(!t)throw new Error(`Cannot find fragment "${e.fragmentName}"`);const n=t.selectionSet.possibleTypes.filter((t=>e.selectionSet.possibleTypes.includes(t)));e.isConditional=t.selectionSet.possibleTypes.some((t=>!e.selectionSet.possibleTypes.includes(t))),e.selectionSet={possibleTypes:n,selections:t.selectionSet.selections}}return{schema:e,typesUsed:r.typesUsed,operations:i,fragments:s,options:n}}class Compiler{constructor(e,t){this.unresolvedFragmentSpreads=[],this.schema=e,this.options=t,this.typesUsedSet=new Set}addTypeUsed(e){if((!Ie(e)||!this.typesUsedSet.has(e))&&((ue(e)||pe(e)||se(e)&&!qe(e))&&this.typesUsedSet.add(e),pe(e)))for(const t of Object.values(e.getFields()))this.addTypeUsed(ge(t.type))}get typesUsed(){return Array.from(this.typesUsedSet)}compileOperation(e){if(!e.name)throw new Error("Operations should be named");const t=On(e),n=e.name.value,r=e.operation,i=(e.variableDefinitions||[]).map((e=>{const t=e.variable.name.value,n=Ft(this.schema,e.type);return this.addTypeUsed(ge(n)),{name:t,type:n}})),s=q(e),o=function(e,t){if("query"===t.operation){const n=e.getQueryType();if(!n)throw new GraphQLError("Schema does not define the required query root type.",t);return n}if("mutation"===t.operation){const n=e.getMutationType();if(!n)throw new GraphQLError("Schema is not configured for mutations.",t);return n}if("subscription"===t.operation){const n=e.getSubscriptionType();if(!n)throw new GraphQLError("Schema is not configured for subscriptions.",t);return n}throw new GraphQLError("Can only have query, mutation and subscription operations.",t)}(this.schema,e);return{filePath:t,operationName:n,operationType:r,variables:i,source:s,rootType:o,selectionSet:this.compileSelectionSet(e.selectionSet,o)}}compileFragment(e){const t=e.name.value,n=On(e),r=q(e),i=Ft(this.schema,e.typeCondition);return{fragmentName:t,filePath:n,source:r,type:i,selectionSet:this.compileSelectionSet(e.selectionSet,i)}}compileSelectionSet(e,t,n=this.possibleTypesForType(t),r=new Set){return{possibleTypes:n,selections:e.selections.map((e=>function(e,t,n){if(!e)return null;if(!t.directives)return e;for(const r of t.directives){const t=r.name.value;if("skip"===t||"include"===t){if(!r.arguments)continue;const i=r.arguments[0].value;switch(i.kind){case"BooleanValue":return"skip"===t?i.value?null:e:i.value?e:null;case"Variable":e={kind:"BooleanCondition",variableName:i.name.value,inverted:"skip"===t,selectionSet:{possibleTypes:n,selections:[e]}}}}}return e}(this.compileSelection(e,t,n,r),e,n))).filter((e=>e))}}compileSelection(e,t,n,r){switch(e.kind){case c.FIELD:{const n=e.name.value,r=e.alias?e.alias.value:void 0,i=function(e,t,n){const r=n.name.value;return r===st.name&&e.getQueryType()===t?st:r===ot.name&&e.getQueryType()===t?ot:r===at.name&&(oe(t)||ae(t)||ce(t))?at:oe(t)||ae(t)?t.getFields()[r]:void 0}(this.schema,t,e);if(!i)throw new GraphQLError(`Cannot query field "${n}" on type "${String(t)}"`,[e]);const s=i.type,o=ge(s);this.addTypeUsed(o);const{description:a,deprecationReason:c}=i;let u={kind:"Field",responseKey:r||n,name:n,alias:r,arguments:e.arguments&&e.arguments.length>0?e.arguments.map((e=>{const t=e.name.value,n=i.args.find((t=>t.name===e.name.value)),r=n&&n.type||void 0;return{name:t,value:An(e.value),type:r}})):void 0,type:s,description:!Sn(n)&&a?a:void 0,deprecationReason:c||void 0};if(ye(o)){if(!e.selectionSet)throw new GraphQLError(`Composite field "${n}" on type "${String(t)}" requires selection set`,[e]);u.selectionSet=this.compileSelectionSet(e.selectionSet,o)}return u}case c.INLINE_FRAGMENT:{const r=e.typeCondition,i=r?Ft(this.schema,r):t,s=this.possibleTypesForType(i).filter((e=>n.includes(e)));return{kind:"TypeCondition",type:i,selectionSet:this.compileSelectionSet(e.selectionSet,i,s)}}case c.FRAGMENT_SPREAD:{const t=e.name.value;if(r.has(t))return null;r.add(t);const i={kind:"FragmentSpread",fragmentName:t,selectionSet:{possibleTypes:n,selections:[]}};return this.unresolvedFragmentSpreads.push(i),i}}}possibleTypesForType(e){return Te(e)?Array.from(this.schema.getPossibleTypes(e))||[]:[e]}}function wn(e){return t={operations:Object.values(e.operations),fragments:Object.values(e.fragments),typesUsed:e.typesUsed},JSON.stringify(t,(function(e,t){return ie(t)?String(t):t}),n);var t,n}return e.GraphQLEnumType=GraphQLEnumType,e.GraphQLError=GraphQLError,e.GraphQLInputObjectType=GraphQLInputObjectType,e.GraphQLInterfaceType=GraphQLInterfaceType,e.GraphQLObjectType=GraphQLObjectType,e.GraphQLScalarType=GraphQLScalarType,e.GraphQLSchema=GraphQLSchema,e.GraphQLSchemaValidationError=GraphQLSchemaValidationError,e.GraphQLUnionType=GraphQLUnionType,e.Source=Source,e.compileDocument=function(e,t){return wn(Dn(e,t,{}))},e.loadSchemaFromIntrospectionResult=function(e){let t=JSON.parse(e);t.data&&(t=t.data);const n=yn(t);return bn(n),n},e.loadSchemaFromSDL=function(e){const t=A(e);!function(e){const t=dn(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}(t);const n=In(t,{assumeValidSDL:!0});return bn(n),n},e.mergeDocuments=function(e){return function(e){let t=[];for(const n of e)t=t.concat(n.definitions);return{kind:"Document",definitions:t}}(e)},e.parseDocument=function(e){return A(e)},e.validateDocument=function(e,t){return ln(e,t,_n)},Object.defineProperty(e,"__esModule",{value:!0}),e}({});
//# sourceMappingURL=ApolloCodegenFrontend.bundle.js.map
